<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on fang7个人博客</title><link>https://chenchenfang.github.io/post/</link><description>Recent content in Posts on fang7个人博客</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 18 Apr 2024 20:16:00 +0800</lastBuildDate><atom:link href="https://chenchenfang.github.io/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Okhttp发送请求卡住问题解决</title><link>https://chenchenfang.github.io/p/okhttp%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82%E5%8D%A1%E4%BD%8F%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</link><pubDate>Thu, 18 Apr 2024 20:16:00 +0800</pubDate><guid>https://chenchenfang.github.io/p/okhttp%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82%E5%8D%A1%E4%BD%8F%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</guid><description>&lt;h1 id="okhttp发送请求卡住问题解决">Okhttp发送请求卡住问题解决
&lt;/h1>&lt;p>我们有一个消费者组是发送请求用的,一直有一个问题是有时候会堆积,然后就不消费了,重启后就恢复了.&amp;hellip;&lt;/p>
&lt;p>于是我让运维加了一个脚本,在堆积的时候触发这个脚本(dump出来文件),然后重启消费者组,先这样解决,等上班了再检查dump的文件&lt;/p>
&lt;p>于是乎就有了下边这个图里的内容,发现其他线程都在wait,只有一个在runing,然后看到堆栈信息卡在了这个方法,点进去查看这个是一个native方法,这个目前看是做不了什么了&lt;/p>
&lt;p>突然想到我们都是ipv4,这个是调用的ipv6的类,于是去查了资料发现可以在启动项上加&lt;code>-Djava.net.preferIPv4Stack=true&lt;/code>{.language-plaintext
.highlighter-rouge}来使用ipv4类,加上之后跑了一星期没有再出现之前的问题,问题解决&lt;/p>
&lt;p>&lt;img src="https://chenchenfang.github.io/p/okhttp%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82%E5%8D%A1%E4%BD%8F%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/ec7b4c186ba15d5d351d233a5bf37778fba02df9.png"
width="2414"
height="1710"
srcset="https://chenchenfang.github.io/p/okhttp%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82%E5%8D%A1%E4%BD%8F%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/ec7b4c186ba15d5d351d233a5bf37778fba02df9_hu15999014661440028603.png 480w, https://chenchenfang.github.io/p/okhttp%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82%E5%8D%A1%E4%BD%8F%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/ec7b4c186ba15d5d351d233a5bf37778fba02df9_hu10211450558414316321.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="141"
data-flex-basis="338px"
>
&lt;img src="https://chenchenfang.github.io/p/okhttp%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82%E5%8D%A1%E4%BD%8F%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/1bc26336542fd3fd66542f10e9ae5e8b35e34e1a.png"
width="1870"
height="1718"
srcset="https://chenchenfang.github.io/p/okhttp%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82%E5%8D%A1%E4%BD%8F%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/1bc26336542fd3fd66542f10e9ae5e8b35e34e1a_hu6650442797235978819.png 480w, https://chenchenfang.github.io/p/okhttp%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82%E5%8D%A1%E4%BD%8F%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/1bc26336542fd3fd66542f10e9ae5e8b35e34e1a_hu4385047254819795764.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="108"
data-flex-basis="261px"
>&lt;/p></description></item><item><title>IDEA 2024.1 版本提高流畅度方法</title><link>https://chenchenfang.github.io/p/idea-2024.1-%E7%89%88%E6%9C%AC%E6%8F%90%E9%AB%98%E6%B5%81%E7%95%85%E5%BA%A6%E6%96%B9%E6%B3%95/</link><pubDate>Thu, 21 Mar 2024 20:25:00 +0800</pubDate><guid>https://chenchenfang.github.io/p/idea-2024.1-%E7%89%88%E6%9C%AC%E6%8F%90%E9%AB%98%E6%B5%81%E7%95%85%E5%BA%A6%E6%96%B9%E6%B3%95/</guid><description>&lt;h1 id="idea-20241-版本提高流畅度方法-idea-20241-e78988e69cace68f90e9ab98e6b581e79585e5baa6e696b9e6b395-style">IDEA 2024.1 版本提高流畅度方法 {#idea-2024.1-%E7%89%88%E6%9C%AC%E6%8F%90%E9%AB%98%E6%B5%81%E7%95%85%E5%BA%A6%E6%96%B9%E6%B3%95 style=&amp;quot;&amp;quot;}
&lt;/h1>&lt;p>今天看IDEA出了2024.1 ,本着尝鲜的想法安装了&lt;/p>
&lt;p>正好前段时间测试了JDK21的分代ZGC,可以说基本就没有stop the
world,这不都安装了新版本了,顺便修改一下运行的JDK版本和垃圾回收机制&lt;/p>
&lt;p>按两下&lt;code>shift&lt;/code>
,然后输入runtime,选择红框这个&lt;/p>
&lt;p>&lt;img src="https://chenchenfang.github.io/p/idea-2024.1-%E7%89%88%E6%9C%AC%E6%8F%90%E9%AB%98%E6%B5%81%E7%95%85%E5%BA%A6%E6%96%B9%E6%B3%95/f34b5267825663bced217b40b3bc677627733ac3.png"
width="1980"
height="1292"
srcset="https://chenchenfang.github.io/p/idea-2024.1-%E7%89%88%E6%9C%AC%E6%8F%90%E9%AB%98%E6%B5%81%E7%95%85%E5%BA%A6%E6%96%B9%E6%B3%95/f34b5267825663bced217b40b3bc677627733ac3_hu6773270718524507272.png 480w, https://chenchenfang.github.io/p/idea-2024.1-%E7%89%88%E6%9C%AC%E6%8F%90%E9%AB%98%E6%B5%81%E7%95%85%E5%BA%A6%E6%96%B9%E6%B3%95/f34b5267825663bced217b40b3bc677627733ac3_hu16643637880934213410.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="153"
data-flex-basis="367px"
>
&lt;img src="https://chenchenfang.github.io/p/idea-2024.1-%E7%89%88%E6%9C%AC%E6%8F%90%E9%AB%98%E6%B5%81%E7%95%85%E5%BA%A6%E6%96%B9%E6%B3%95/e8e52b528c556c8ed1ee4c7135fc2b096ec06705.png"
width="1296"
height="594"
srcset="https://chenchenfang.github.io/p/idea-2024.1-%E7%89%88%E6%9C%AC%E6%8F%90%E9%AB%98%E6%B5%81%E7%95%85%E5%BA%A6%E6%96%B9%E6%B3%95/e8e52b528c556c8ed1ee4c7135fc2b096ec06705_hu18088184979107389208.png 480w, https://chenchenfang.github.io/p/idea-2024.1-%E7%89%88%E6%9C%AC%E6%8F%90%E9%AB%98%E6%B5%81%E7%95%85%E5%BA%A6%E6%96%B9%E6%B3%95/e8e52b528c556c8ed1ee4c7135fc2b096ec06705_hu1172406604699962420.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="218"
data-flex-basis="523px"
>
然后会提示重启IDEA,重启完成后,开始修改垃圾回收为分代ZGC,打开修改框之后删除G1的开关,增加&lt;code>-XX:+UseZGC -XX:+ZGenerational&lt;/code>
这两个参数,我顺便修改了&lt;code>-Xms2500m -Xmx2500m&lt;/code> 最大最小堆内存,就不需要扩容了,也可以降低卡顿&lt;/p>
&lt;p>关于ZGC调优,经过我之前的测试,ZGC基本是不需要刻意调整的,如果非要调整加大堆内存量,就可以了.&lt;/p>
&lt;p>&lt;img src="https://chenchenfang.github.io/p/idea-2024.1-%E7%89%88%E6%9C%AC%E6%8F%90%E9%AB%98%E6%B5%81%E7%95%85%E5%BA%A6%E6%96%B9%E6%B3%95/2495a98e5bfca9405f3570b81a45ce38542ad64a.png"
width="1000"
height="1278"
srcset="https://chenchenfang.github.io/p/idea-2024.1-%E7%89%88%E6%9C%AC%E6%8F%90%E9%AB%98%E6%B5%81%E7%95%85%E5%BA%A6%E6%96%B9%E6%B3%95/2495a98e5bfca9405f3570b81a45ce38542ad64a_hu680108634475531585.png 480w, https://chenchenfang.github.io/p/idea-2024.1-%E7%89%88%E6%9C%AC%E6%8F%90%E9%AB%98%E6%B5%81%E7%95%85%E5%BA%A6%E6%96%B9%E6%B3%95/2495a98e5bfca9405f3570b81a45ce38542ad64a_hu9391883930537883812.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="78"
data-flex-basis="187px"
>
&lt;img src="https://chenchenfang.github.io/p/idea-2024.1-%E7%89%88%E6%9C%AC%E6%8F%90%E9%AB%98%E6%B5%81%E7%95%85%E5%BA%A6%E6%96%B9%E6%B3%95/d03103c67f119b0dc01d2f86062b73636f859296.png"
width="1114"
height="784"
srcset="https://chenchenfang.github.io/p/idea-2024.1-%E7%89%88%E6%9C%AC%E6%8F%90%E9%AB%98%E6%B5%81%E7%95%85%E5%BA%A6%E6%96%B9%E6%B3%95/d03103c67f119b0dc01d2f86062b73636f859296_hu243225601143423270.png 480w, https://chenchenfang.github.io/p/idea-2024.1-%E7%89%88%E6%9C%AC%E6%8F%90%E9%AB%98%E6%B5%81%E7%95%85%E5%BA%A6%E6%96%B9%E6%B3%95/d03103c67f119b0dc01d2f86062b73636f859296_hu13529541547114605128.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="142"
data-flex-basis="341px"
>&lt;/p></description></item><item><title>mysql连接数激增的问题解决过程</title><link>https://chenchenfang.github.io/p/mysql%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%BF%80%E5%A2%9E%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E8%BF%87%E7%A8%8B/</link><pubDate>Sat, 30 Dec 2023 21:32:00 +0800</pubDate><guid>https://chenchenfang.github.io/p/mysql%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%BF%80%E5%A2%9E%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E8%BF%87%E7%A8%8B/</guid><description>&lt;blockquote>
&lt;p>平时mysql连接数大概在2000左右,会不定时随机的突然增加到5000,这个事情就很恐怖,所以需要查出来连接数增加的原因&lt;/p>
&lt;/blockquote>
&lt;h2 id="分析与定位问题-e58886e69e90e4b88ee5ae9ae4bd8de997aee9a298-tabindex-1">分析与定位问题 {#%E5%88%86%E6%9E%90%E4%B8%8E%E5%AE%9A%E4%BD%8D%E9%97%AE%E9%A2%98 tabindex=&amp;quot;-1&amp;quot;}
&lt;/h2>&lt;h3 id="分析现有的监控和数据-e58886e69e90e78eb0e69c89e79a84e79b91e68ea7e5928ce695b0e68dae-tabindex-1">分析现有的监控和数据 {#%E5%88%86%E6%9E%90%E7%8E%B0%E6%9C%89%E7%9A%84%E7%9B%91%E6%8E%A7%E5%92%8C%E6%95%B0%E6%8D%AE tabindex=&amp;quot;-1&amp;quot;}
&lt;/h3>&lt;ol>
&lt;li>连接数 5000的报警钉钉信息&lt;/li>
&lt;li>当连接数5000的时候,数据库里当前连接正在执行的状态&lt;/li>
&lt;/ol>
&lt;div class="highlight hljs language-perl">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-mysql" data-lang="mysql">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="k">user&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">host&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">db&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">command&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="kt">time&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">state&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">information_schema&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">processlist&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>分析第二个的数据,看到连接基本都在sleep,很少有正在执行的,由于连接数据库是通过内网代理连接的,所以不能直接看出来哪个或者哪些机器导致了这个问题&lt;/p>
&lt;h3 id="增加新的监控-e5a29ee58aa0e696b0e79a84e79b91e68ea7-tabindex-1">增加新的监控 {#%E5%A2%9E%E5%8A%A0%E6%96%B0%E7%9A%84%E7%9B%91%E6%8E%A7 tabindex=&amp;quot;-1&amp;quot;}
&lt;/h3>&lt;p>要定位哪里的问题就需要知道哪个程序或者哪个机器导致的,一步一步深入查,现在连哪个机器导致的问题都不知道,没办法去查,幸运的是这个问题是可以重现的,不必纠结过去没有数据,创造出新的数据再定位问题就行.&lt;br>
在这里就想到了&lt;code>netstat&lt;/code>{.language-plaintext
.highlighter-rouge}命令,这个可以在代理机器上执行,查看哪些IP连接了mysql代理服务,并统计个数,于是就把这个命令的触发加到了发送钉钉报警的程序里.&lt;br>
到这里又想到了一个问题,异常数据有了之后,没有正常的数据做对比还是定位不出来问题,所以增加了每分钟执行一次来保存正常数据用于做对比.&lt;/p>
&lt;h3 id="分析新监控数据-e58886e69e90e696b0e79b91e68ea7e695b0e68dae-tabindex-1">分析新监控数据 {#%E5%88%86%E6%9E%90%E6%96%B0%E7%9B%91%E6%8E%A7%E6%95%B0%E6%8D%AE tabindex=&amp;quot;-1&amp;quot;}
&lt;/h3>&lt;p>等了1天终于等到了这个报警出现,对比平时的数据来说按连接数倒序,可以看到前边的大多数ip连接数都增加了,问了一下运维这些机器上都有哪些服务,被告知都是线上的tomcat服务.&lt;br>
到这里总算有了一些进展,但是到了这里又遇到问题了,tomcat里边虽然只有一个项目,但是这个项目中代码量很大,review代码是看不出来也没有办法都review一遍,有什么办法可以定位什么业务创建了连接呢?&lt;br>
之前读过一遍arthas的文档,对大概的命令以及功能有所了解,于是就想到了
&lt;a class="link" href="https://arthas.aliyun.com/doc/stack.html" target="_blank" rel="noopener"
>stack&lt;/a>{target=&amp;quot;_blank&amp;quot;} 这个命令,这个命令可以打印当前方法的调用堆栈信息,因为创建连接是必须new对象,那么监控这个new对象时候必须调用的方法就可以定位到具体的代码.&lt;br>
因为这个是随机性的bug,那么靠人手动执行是看不出问题的,于是使用了arthas提供的任务后台执行的方法,后台任务最多执行1天,同时需要指定抓取多少条堆栈信息.&lt;br>
之前没用过arthas,只是看文档知道执行stack会影响性能,但是具体影响多少性能并不清楚,这里找了一台线上tomcat手动执行stack,并观察了超时情况,超时只增加了0.5%,这个值可以接受,于是就开始后台执行了&lt;/p>
&lt;h3 id="等待新的监控数据-e7ad89e5be85e696b0e79a84e79b91e68ea7e695b0e68dae-tabindex-1">等待新的监控数据 {#%E7%AD%89%E5%BE%85%E6%96%B0%E7%9A%84%E7%9B%91%E6%8E%A7%E6%95%B0%E6%8D%AE tabindex=&amp;quot;-1&amp;quot;}
&lt;/h3>&lt;p>等啊等,终于等到了报警,查看对应时间的连接创建堆栈信息,问题出在缓存读取的方法上.&lt;br>
如果缓存没有就会读取数据库,同一时间突然有很多都去查询数据库了,原因是缓存里没有对应的数据了,缓存是一个concurrenthashmap,直接做的替换,而同时这个map会根据实际情况增加数据进入,由此可以判断是新加的那部分数据,缓存替换的时候消失了.&lt;/p>
&lt;h3 id="思考解决方案-e6809de88083e8a7a3e586b3e696b9e6a188-tabindex-1">思考解决方案 {#%E6%80%9D%E8%80%83%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88 tabindex=&amp;quot;-1&amp;quot;}
&lt;/h3>&lt;p>缓存直接做替换是不行的,会丢失新加入的数据,那首先想到的是更新数据,更新数据会有一个问题是按之前逻辑新增加的那部分数据就会一直存在,内存也会越占用越多,所以需要有删除过期数据的程序,那么问题又来了,这个不好写,就算写了也不好维护.&lt;br>
这里就想到了&lt;strong>Caffeine缓存框架&lt;/strong>,当真是很强大的本地内存缓存的框架,可以设置多久没有访问就会过期,也支持更新操作,对于我这个需求来说简直完美.&lt;br>
到了这里这个问题就算解决了,修改代码不过半小时的事情,主要的问题还是如何定位出来哪里代码有问题,&lt;/p></description></item><item><title>OkHttp优化过程记录</title><link>https://chenchenfang.github.io/p/okhttp%E4%BC%98%E5%8C%96%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/</link><pubDate>Sat, 14 Oct 2023 10:06:00 +0800</pubDate><guid>https://chenchenfang.github.io/p/okhttp%E4%BC%98%E5%8C%96%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/</guid><description>&lt;blockquote>
&lt;p>近期查看有请求下游系统超时,按百分比的话是0.8%的样子,但是每天量很大,超时总数不到1亿次,如果这个可以优化一点,提升巨大的&lt;/p>
&lt;/blockquote>
&lt;h1 id="1整体的探索过程">1.整体的探索过程
&lt;/h1>&lt;blockquote>
&lt;p>目前只知道最终结果是超时,但是是不是哪里代码写的有问题从而导致的超时,还需要去定位&lt;/p>
&lt;/blockquote>
&lt;h2 id="11初步定为问题">1.1初步定为问题
&lt;/h2>&lt;p>首先记录两个时间,第一个是请求一进来一直到拼接发送请求的位置这段代码的,第二个是拼接请求一直到Response(或者超时了)这段代码的时间&lt;br>
超时情况:&lt;br>
&lt;img src="https://chenchenfang.github.io/p/okhttp%E4%BC%98%E5%8C%96%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/731e42fcb6ab158c698b819c85ddddb3ed95365b.png"
width="1622"
height="962"
srcset="https://chenchenfang.github.io/p/okhttp%E4%BC%98%E5%8C%96%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/731e42fcb6ab158c698b819c85ddddb3ed95365b_hu959709198380300150.png 480w, https://chenchenfang.github.io/p/okhttp%E4%BC%98%E5%8C%96%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/731e42fcb6ab158c698b819c85ddddb3ed95365b_hu1282212480590999554.png 1024w"
loading="lazy"
alt="image-1697245681908"
class="gallery-image"
data-flex-grow="168"
data-flex-basis="404px"
>
不超时情况:&lt;br>
&lt;img src="https://chenchenfang.github.io/p/okhttp%E4%BC%98%E5%8C%96%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/4a003a4dca4afea5db00df10c5848a7bd241698d.png"
width="1586"
height="916"
srcset="https://chenchenfang.github.io/p/okhttp%E4%BC%98%E5%8C%96%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/4a003a4dca4afea5db00df10c5848a7bd241698d_hu14326980663132857269.png 480w, https://chenchenfang.github.io/p/okhttp%E4%BC%98%E5%8C%96%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/4a003a4dca4afea5db00df10c5848a7bd241698d_hu17658798224294194040.png 1024w"
loading="lazy"
alt="image-1697245800201"
class="gallery-image"
data-flex-grow="173"
data-flex-basis="415px"
>
从图上来看,不管是超时和不超时都第一个时间都不长,所以是拼接请求到接受Response的时候引起的超时&lt;/p>
&lt;h2 id="12更细化的定位问题">1.2更细化的定位问题
&lt;/h2>&lt;blockquote>
&lt;p>现在知道是和发送请求有关系了,那么应该对于这部分代码增加详细的记录,来分析问题&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a class="link" href="https://zhaoxiaofa.com/2021/09/03/OkHttp%E7%9B%91%E6%8E%A7%E4%B8%8E%E8%B0%83%E4%BC%98/" target="_blank" rel="noopener"
>OkHttp监控与调优&lt;/a>查资料的时候看到这个文章写的不错&lt;br>
经过一番查找资料,okhttp有一个EventListener,可以记录发送请求的各个步骤的时间&lt;br>
于是就有了下边的代码&lt;/p>
&lt;div class="highlight java hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;span class="lnt">116
&lt;/span>&lt;span class="lnt">117
&lt;/span>&lt;span class="lnt">118
&lt;/span>&lt;span class="lnt">119
&lt;/span>&lt;span class="lnt">120
&lt;/span>&lt;span class="lnt">121
&lt;/span>&lt;span class="lnt">122
&lt;/span>&lt;span class="lnt">123
&lt;/span>&lt;span class="lnt">124
&lt;/span>&lt;span class="lnt">125
&lt;/span>&lt;span class="lnt">126
&lt;/span>&lt;span class="lnt">127
&lt;/span>&lt;span class="lnt">128
&lt;/span>&lt;span class="lnt">129
&lt;/span>&lt;span class="lnt">130
&lt;/span>&lt;span class="lnt">131
&lt;/span>&lt;span class="lnt">132
&lt;/span>&lt;span class="lnt">133
&lt;/span>&lt;span class="lnt">134
&lt;/span>&lt;span class="lnt">135
&lt;/span>&lt;span class="lnt">136
&lt;/span>&lt;span class="lnt">137
&lt;/span>&lt;span class="lnt">138
&lt;/span>&lt;span class="lnt">139
&lt;/span>&lt;span class="lnt">140
&lt;/span>&lt;span class="lnt">141
&lt;/span>&lt;span class="lnt">142
&lt;/span>&lt;span class="lnt">143
&lt;/span>&lt;span class="lnt">144
&lt;/span>&lt;span class="lnt">145
&lt;/span>&lt;span class="lnt">146
&lt;/span>&lt;span class="lnt">147
&lt;/span>&lt;span class="lnt">148
&lt;/span>&lt;span class="lnt">149
&lt;/span>&lt;span class="lnt">150
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">public&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">PrintingEventListener&lt;/span> &lt;span class="k">extends&lt;/span> &lt;span class="n">EventListener&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">Override&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">requestBodyEnd&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="n">NotNull&lt;/span> &lt;span class="n">Call&lt;/span> &lt;span class="n">call&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">long&lt;/span> &lt;span class="n">byteCount&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">printEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;requestBodyEnd&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">Override&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">requestBodyStart&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="n">NotNull&lt;/span> &lt;span class="n">Call&lt;/span> &lt;span class="n">call&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">printEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;requestBodyStart&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">Override&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">responseBodyEnd&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="n">NotNull&lt;/span> &lt;span class="n">Call&lt;/span> &lt;span class="n">call&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">long&lt;/span> &lt;span class="n">byteCount&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">printEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;responseBodyEnd&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">Override&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">responseBodyStart&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="n">NotNull&lt;/span> &lt;span class="n">Call&lt;/span> &lt;span class="n">call&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">printEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;responseBodyStart&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">Override&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">responseHeadersEnd&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="n">NotNull&lt;/span> &lt;span class="n">Call&lt;/span> &lt;span class="n">call&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">@&lt;/span>&lt;span class="n">NotNull&lt;/span> &lt;span class="n">Response&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">printEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;responseHeadersEnd&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">Override&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">responseHeadersStart&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="n">NotNull&lt;/span> &lt;span class="n">Call&lt;/span> &lt;span class="n">call&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">printEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;responseHeadersStart&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="k">static&lt;/span> &lt;span class="n">final&lt;/span> &lt;span class="n">Factory&lt;/span> &lt;span class="n">FACTORY&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Factory&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">Override&lt;/span> &lt;span class="n">public&lt;/span> &lt;span class="n">EventListener&lt;/span> &lt;span class="n">create&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Call&lt;/span> &lt;span class="n">call&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span>&lt;span class="err">唯一标识&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="ne">String&lt;/span> &lt;span class="n">randAllString&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Format&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getRandAllString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Random&lt;/span> &lt;span class="n">random&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Random&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">randAllString&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">hashCode&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">double&lt;/span> &lt;span class="n">nextDouble&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">nextDouble&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span>&lt;span class="err">是&lt;/span>&lt;span class="n">tanx&lt;/span> &lt;span class="err">与&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="err">的概率&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">call&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">toString&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">equals&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;xxx&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">nextDouble&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">100&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">InitServlet&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">okhttpTimeLog&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plus&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">randAllString&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;startSend&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="n">L&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">%s&lt;/span>&lt;span class="s2"> &lt;/span>&lt;span class="si">%s&lt;/span>&lt;span class="s2">%n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">randAllString&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">call&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">PrintingEventListener&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">randAllString&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">nanoTime&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">EventListener&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">NONE&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">final&lt;/span> &lt;span class="ne">String&lt;/span> &lt;span class="n">callId&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">final&lt;/span> &lt;span class="n">long&lt;/span> &lt;span class="n">callStartNanos&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">PrintingEventListener&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ne">String&lt;/span> &lt;span class="n">callId&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">long&lt;/span> &lt;span class="n">callStartNanos&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">callId&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">callId&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">this&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">callStartNanos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">callStartNanos&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">printEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ne">String&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">long&lt;/span> &lt;span class="n">elapsedNanos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">nanoTime&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">callStartNanos&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">InitServlet&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">okhttpTimeLog&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plus&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">callId&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">elapsedNanos&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">1000000&lt;/span>&lt;span class="n">L&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">%s&lt;/span>&lt;span class="s2"> &lt;/span>&lt;span class="si">%.0f&lt;/span>&lt;span class="s2">ms &lt;/span>&lt;span class="si">%s&lt;/span>&lt;span class="s2">%n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">callId&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">elapsedNanos&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">1000000&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">printEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ne">String&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">IOException&lt;/span> &lt;span class="n">ioe&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">long&lt;/span> &lt;span class="n">elapsedNanos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">nanoTime&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">callStartNanos&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">InitServlet&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">okhttpTimeLog&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plus&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">callId&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">elapsedNanos&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">1000000&lt;/span>&lt;span class="n">L&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">ioe&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getMessage&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">%s&lt;/span>&lt;span class="s2"> &lt;/span>&lt;span class="si">%.0f&lt;/span>&lt;span class="s2">ms &lt;/span>&lt;span class="si">%s&lt;/span>&lt;span class="s2"> &lt;/span>&lt;span class="si">%s&lt;/span>&lt;span class="s2">%n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">callId&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">elapsedNanos&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">1000000&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">ioe&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getMessage&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">Override&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">callStart&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Call&lt;/span> &lt;span class="n">call&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">printEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;callStart&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">Override&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">dnsStart&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Call&lt;/span> &lt;span class="n">call&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ne">String&lt;/span> &lt;span class="n">domainName&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">printEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;dnsStart&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">Override&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">dnsEnd&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Call&lt;/span> &lt;span class="n">call&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ne">String&lt;/span> &lt;span class="n">domainName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">InetAddress&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">inetAddressList&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">printEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;dnsEnd&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">Override&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">connectStart&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Call&lt;/span> &lt;span class="n">call&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">InetSocketAddress&lt;/span> &lt;span class="n">inetSocketAddress&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Proxy&lt;/span> &lt;span class="n">proxy&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">printEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;connectStart&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">Override&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">secureConnectStart&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Call&lt;/span> &lt;span class="n">call&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">printEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;secureConnectStart&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">Override&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">secureConnectEnd&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Call&lt;/span> &lt;span class="n">call&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">@&lt;/span>&lt;span class="n">Nullable&lt;/span> &lt;span class="n">Handshake&lt;/span> &lt;span class="n">handshake&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">printEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;secureConnectEnd&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">Override&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">connectEnd&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Call&lt;/span> &lt;span class="n">call&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">InetSocketAddress&lt;/span> &lt;span class="n">inetSocketAddress&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Proxy&lt;/span> &lt;span class="n">proxy&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">@&lt;/span>&lt;span class="n">Nullable&lt;/span> &lt;span class="n">Protocol&lt;/span> &lt;span class="n">protocol&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">printEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;connectEnd&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">Override&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">connectFailed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Call&lt;/span> &lt;span class="n">call&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">InetSocketAddress&lt;/span> &lt;span class="n">inetSocketAddress&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Proxy&lt;/span> &lt;span class="n">proxy&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">@&lt;/span>&lt;span class="n">Nullable&lt;/span> &lt;span class="n">Protocol&lt;/span> &lt;span class="n">protocol&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">IOException&lt;/span> &lt;span class="n">ioe&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">printEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;connectFailed&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">Override&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">connectionAcquired&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Call&lt;/span> &lt;span class="n">call&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Connection&lt;/span> &lt;span class="n">connection&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">printEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;connectionAcquired&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">Override&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">requestHeadersStart&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Call&lt;/span> &lt;span class="n">call&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">printEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;requestHeadersStart&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">Override&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">requestHeadersEnd&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Call&lt;/span> &lt;span class="n">call&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Request&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">printEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;requestHeadersEnd&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">Override&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">connectionReleased&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Call&lt;/span> &lt;span class="n">call&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Connection&lt;/span> &lt;span class="n">connection&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">printEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;connectionReleased&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">Override&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">requestFailed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Call&lt;/span> &lt;span class="n">call&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">IOException&lt;/span> &lt;span class="n">ioe&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">printEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;requestFailed&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">ioe&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">Override&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">responseFailed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Call&lt;/span> &lt;span class="n">call&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">IOException&lt;/span> &lt;span class="n">ioe&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">printEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;responseFailed&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">ioe&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">Override&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">callFailed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Call&lt;/span> &lt;span class="n">call&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">IOException&lt;/span> &lt;span class="n">ioe&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">printEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;callFailed&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">ioe&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">Override&lt;/span> &lt;span class="n">public&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">callEnd&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Call&lt;/span> &lt;span class="n">call&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">printEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;callEnd&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这个是记录的结果,这里只放一条数据了,可以明显看出来仅仅是等待Response的时候超时&lt;br>
&lt;img src="https://chenchenfang.github.io/p/okhttp%E4%BC%98%E5%8C%96%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/5c354dbb64d42457b94bbc762023cb6ae3d85bde.png"
width="1594"
height="734"
srcset="https://chenchenfang.github.io/p/okhttp%E4%BC%98%E5%8C%96%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/5c354dbb64d42457b94bbc762023cb6ae3d85bde_hu8966688172176265007.png 480w, https://chenchenfang.github.io/p/okhttp%E4%BC%98%E5%8C%96%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/5c354dbb64d42457b94bbc762023cb6ae3d85bde_hu10377475572011981773.png 1024w"
loading="lazy"
alt="image-1697247499791"
class="gallery-image"
data-flex-grow="217"
data-flex-basis="521px"
>&lt;/p>
&lt;h1 id="2寻求优化问题的方法">2.寻求优化问题的方法
&lt;/h1>&lt;blockquote>
&lt;p>这个问题的根本原因是下游响应时间长导致的,首先我们是不可能去干预下游系统的,那从我们自身来看,有哪些可以优化的地方呢?&lt;/p>
&lt;/blockquote>
&lt;h2 id="21okhttp各种参数的检查">2.1okhttp各种参数的检查
&lt;/h2>&lt;blockquote>
&lt;p>最常见的就是参数优化,调整参数之前需要有相应的日志或者当前数据来支持,没有数据的调参都是瞎搞&lt;/p>
&lt;/blockquote>
&lt;p>经过一番查找资料,收集了几个okhttp的参数,开始做监控&lt;/p>
&lt;div class="highlight java hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">//新增监控发送给dsp的线程池
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> val queuedCallsCount = Java_To_Dsp_Handle.OkHttpClientTool.dispatcher.queuedCallsCount()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> val runningCallsCount = Java_To_Dsp_Handle.OkHttpClientTool.dispatcher.runningCallsCount()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> val connectionCount = Java_To_Dsp_Handle.OkHttpClientTool.connectionPool.connectionCount()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> val idleConnectionCount = Java_To_Dsp_Handle.OkHttpClientTool.connectionPool.idleConnectionCount()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> out.println(&amp;#34;准备好发送的请求:${queuedCallsCount},正在发送的请求:${runningCallsCount}\n&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> out.println(&amp;#34;发送请求的线程池情况:${Java_To_Dsp_Handle.OkHttpClientTool.threadPool}\n&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> out.println(&amp;#34;目前建立的连接数量:${connectionCount},空闲的连接数量:${idleConnectionCount}\n&amp;#34;)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> //每个host的请求数
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> out.println(Java_To_Dsp_Handle.OkHttpClientTool.hostRequestCounterInterceptor.printRequestCountForHost())
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>以下是执行完之后的打印&lt;/p>
&lt;div class="highlight hljs language-java">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">准备好发送的请求:0,正在发送的请求:65
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">发送请求的线程池情况:java.util.concurrent.ThreadPoolExecutor@3dceaaa5[Running, pool size = 600, active threads = 66, queued tasks = 0, completed tasks = 44826120]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">目前建立的连接数量:316,空闲的连接数量:260
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">host:xxx count:25
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>分析打印的结果:&lt;/p>
&lt;ol>
&lt;li>准备好发送的请求如果有值的话,那么就可能发生等待,这里并没有&lt;/li>
&lt;li>发送请求的线程池也没有满,也没有等待的任务,所以这个也没问题&lt;/li>
&lt;li>再有就是空闲连接也没有达到设置的值,也没问题&lt;/li>
&lt;li>最后一个是每个host最大并发数,也远低于设置的值&lt;/li>
&lt;/ol>
&lt;p>这一顿操作下来,发现参数并没有问题&lt;/p>
&lt;h2 id="22回归代码">2.2回归代码
&lt;/h2>&lt;blockquote>
&lt;p>一般来说,陈年旧代码有优化空间的概率是比较大的,于是抱着试一试的心态,通读了okhttp发送的相关代码,发现确实有提升空间&lt;/p>
&lt;/blockquote>
&lt;p>OkHttpClient对象一般是不会创建很多个,所以之前老代码的逻辑是分成5个OkHttpClient对象,也就是5个梯度的等待时间&lt;br>
比如当前需要等待67毫秒,那么按照梯度会选择超时时间设置为50的OkHttpClient对象,那么这个期间会有17ms的时间损失&lt;br>
一顿查资料以及测试之后发现,OkHttpClient对象每个请求new一个是不合适的,new这个对象时间比较长,但是可以调用OkHttpClient对象的&lt;code>okclient.newBuilder()&lt;/code>{.language-plaintext
.highlighter-rouge}方法重新设置超时时间,这种方式基本没有耗时&lt;/p>
&lt;p>升级完成之后,Response的数量有所上涨,超时率数据目前还没出来,等出来了会补上,至此整个分析以及优化过程告一段落&lt;/p></description></item><item><title>RocketMQ消息过大导致消费者消费不了,导致消息堆积</title><link>https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/</link><pubDate>Mon, 09 Jan 2023 22:49:00 +0800</pubDate><guid>https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/</guid><description>&lt;blockquote>
&lt;p>周日的时候,突然消费者组就开始堆积了,然后临时解决方案想着重新起一个消费者组看看能不能恢复,然而并不能,无奈之下只能迁回使用redis作为消息中间件的方式,周一再细查一下&lt;/p>
&lt;/blockquote>
&lt;h2 id="1-遇到的报错以及现象">1 遇到的报错以及现象
&lt;/h2>&lt;p>首先是看的是Dashboard,发现一会消费者组里边有一个消费者,一会没有&lt;br>
&lt;img src="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/867497dc6749769319ea72912069a26fdc708319.png"
width="2880"
height="1006"
srcset="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/867497dc6749769319ea72912069a26fdc708319_hu9628158653300238125.png 480w, https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/867497dc6749769319ea72912069a26fdc708319_hu14801474781434775362.png 1024w"
loading="lazy"
alt="image"
class="gallery-image"
data-flex-grow="286"
data-flex-basis="687px"
>
其次就该去看消费者组的业务日志打印了,虽然在消费,但是很慢&lt;br>
接下来就是看了消费组的RocketMQ日志打印,发现开始报错刷屏&lt;/p>
&lt;div class="highlight hljs language-php">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">2023-01-08 12:26:45,649 WARN RocketmqClient - execute the pull request exception
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">org.apache.rocketmq.client.exception.MQBrokerException: CODE: 24 DESC: the consumer&amp;#39;s group info not exist
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">See http://rocketmq.apache.org/docs/faq/ for further details. BROKER: 192.168.1.58:10911
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> at org.apache.rocketmq.client.impl.MQClientAPIImpl.processPullResponse(MQClientAPIImpl.java:803)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> at org.apache.rocketmq.client.impl.MQClientAPIImpl.access$200(MQClientAPIImpl.java:175)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> at org.apache.rocketmq.client.impl.MQClientAPIImpl$2.operationComplete(MQClientAPIImpl.java:754)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> at org.apache.rocketmq.remoting.netty.ResponseFuture.executeInvokeCallback(ResponseFuture.java:54)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> at org.apache.rocketmq.remoting.netty.NettyRemotingAbstract$2.run(NettyRemotingAbstract.java:321)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> at java.base/java.lang.Thread.run(Thread.java:833)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2023-01-08 12:26:45,649 WARN RocketmqClient - execute the pull request exception
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">org.apache.rocketmq.client.exception.MQBrokerException: CODE: 24 DESC: the consumer&amp;#39;s group info not exist
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">See http://rocketmq.apache.org/docs/faq/ for further details. BROKER: 192.168.1.58:10911
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> at org.apache.rocketmq.client.impl.MQClientAPIImpl.processPullResponse(MQClientAPIImpl.java:803)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> at org.apache.rocketmq.client.impl.MQClientAPIImpl.access$200(MQClientAPIImpl.java:175)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> at org.apache.rocketmq.client.impl.MQClientAPIImpl$2.operationComplete(MQClientAPIImpl.java:754)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> at org.apache.rocketmq.remoting.netty.ResponseFuture.executeInvokeCallback(ResponseFuture.java:54)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> at org.apache.rocketmq.remoting.netty.NettyRemotingAbstract$2.run(NettyRemotingAbstract.java:321)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> at java.base/java.lang.Thread.run(Thread.java:833)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这个报错卡卡刷屏,于是乎只能去找RocketMQ的消费者client的源码了&lt;/p>
&lt;h2 id="2-源码的追踪-2-e6ba90e7a081e79a84e8bfbde8b8aa-tabindex-1">2 源码的追踪 {#2-%E6%BA%90%E7%A0%81%E7%9A%84%E8%BF%BD%E8%B8%AA tabindex=&amp;quot;-1&amp;quot;}
&lt;/h2>&lt;h3 id="21-消费者client端源码-21-e6b688e8b4b9e88085cliente7abafe6ba90e7a081-tabindex-1">2.1 消费者client端源码 {#2.1-%E6%B6%88%E8%B4%B9%E8%80%85client%E7%AB%AF%E6%BA%90%E7%A0%81 tabindex=&amp;quot;-1&amp;quot;}
&lt;/h3>&lt;p>&lt;code>org.apache.rocketmq.client.impl.MQClientAPIImpl.processPullResponse(MQClientAPIImpl.java:803)&lt;/code>{.language-plaintext
.highlighter-rouge}也就是这一行&lt;br>
&lt;img src="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/883f4989e9d65f9cff08cb65b9188eec6d1b8872.png"
width="2216"
height="1442"
srcset="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/883f4989e9d65f9cff08cb65b9188eec6d1b8872_hu13785655353019703369.png 480w, https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/883f4989e9d65f9cff08cb65b9188eec6d1b8872_hu8930810229303232668.png 1024w"
loading="lazy"
alt="image-1673275379445"
class="gallery-image"
data-flex-grow="153"
data-flex-basis="368px"
>
这看着应该是从broker端拉回来的数据有问题,不是正常能消费的数据,那就再往上层看看&lt;code>RemotingCommand response&lt;/code>{.language-plaintext
.highlighter-rouge}这个对象是怎么来的吧&lt;br>
&lt;img src="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/25c431a6376af2b6b48ce6a9a238d4ab031ab8cc.png"
width="2264"
height="1298"
srcset="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/25c431a6376af2b6b48ce6a9a238d4ab031ab8cc_hu3687956243712694590.png 480w, https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/25c431a6376af2b6b48ce6a9a238d4ab031ab8cc_hu6658444824019031925.png 1024w"
loading="lazy"
alt="image-1673275399471"
class="gallery-image"
data-flex-grow="174"
data-flex-basis="418px"
>
再往上一步点的话,会看到有两个地方一个是同步一个是异步,那看的话自然是看同步,毕竟同步代码更简单明了一些,最终的功能肯定是一样的,因为之前学了学netty以及知道RocketMQ是使用Netty通信的,所以看这个方法名字&lt;code>this.remotingClient.invokeSync&lt;/code>{.language-plaintext
.highlighter-rouge}大概能猜出来它是和broker端进行通信然后获取到要消费的消息,那么接着点进去&lt;br>
&lt;img src="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/f79dfabc78ccb47e7fac8c4e139fa89c90fa67cc.png"
width="2880"
height="1630"
srcset="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/f79dfabc78ccb47e7fac8c4e139fa89c90fa67cc_hu6686999831632058954.png 480w, https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/f79dfabc78ccb47e7fac8c4e139fa89c90fa67cc_hu10959416260250303050.png 1024w"
loading="lazy"
alt="image-1673275489367"
class="gallery-image"
data-flex-grow="176"
data-flex-basis="424px"
>
可以看到&lt;code>response&lt;/code>{.language-plaintext
.highlighter-rouge}对象是从这个方法&lt;code>invokeSyncImpl&lt;/code>{.language-plaintext
.highlighter-rouge}返回出来的,那就再进去看看&lt;br>
&lt;img src="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/06ea476476c01919bd51253362a58fa17fb09926.png"
width="2880"
height="1630"
srcset="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/06ea476476c01919bd51253362a58fa17fb09926_hu2243804697466477512.png 480w, https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/06ea476476c01919bd51253362a58fa17fb09926_hu2662881452436921879.png 1024w"
loading="lazy"
alt="image-1673317661463"
class="gallery-image"
data-flex-grow="176"
data-flex-basis="424px"
>
从这里看的话,并没有对这个对象做特殊的处理,这个时候一定有人有疑问,为什么他就是能正常返回呢,里边还有这么多的if,因为根据&lt;code>CODE: 24 DESC: the consumer's group info not exist&lt;/code>{.language-plaintext
.highlighter-rouge}&lt;br>
这个报错就能看出来,&lt;code>response&lt;/code>对象一定是有的,并且顺利封装了,要不然不可能有这个报错打印,&lt;br>
消费者client的源码算是看完了,并没有发现有什么问题,而这个报错是broker端返回给消费者client的,那就去搜搜broker的源码里哪里有这个报错吧&lt;/p>
&lt;h3 id="22-broker端源码追踪">2.2 broker端源码追踪
&lt;/h3>&lt;p>首先搜了一下这个报错的内容,&lt;code>org.apache.rocketmq.broker.processor.PullMessageProcessor#processRequest(io.netty.channel.Channel, org.apache.rocketmq.remoting.protocol.RemotingCommand, boolean)&lt;/code>{.language-plaintext
.highlighter-rouge}在这个方法的 178行&lt;br>
&lt;img src="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/25a834145650485b2393c99963f3983931af3b13.png"
width="2880"
height="1630"
srcset="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/25a834145650485b2393c99963f3983931af3b13_hu1324290859378508850.png 480w, https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/25a834145650485b2393c99963f3983931af3b13_hu14472381319359874258.png 1024w"
loading="lazy"
alt="image-1673275550621"
class="gallery-image"
data-flex-grow="176"
data-flex-basis="424px"
>
那这里就是&lt;code>this.brokerController.getConsumerManager().getConsumerGroupInfo(requestHeader.getConsumerGroup());&lt;/code>{.language-plaintext
.highlighter-rouge}返回的结果为null,点进去看看&lt;br>
&lt;img src="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/d3cd0a831e0359dc21ec60543f2ed42f7a7a4a50.png"
width="1704"
height="932"
srcset="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/d3cd0a831e0359dc21ec60543f2ed42f7a7a4a50_hu16869095937985464813.png 480w, https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/d3cd0a831e0359dc21ec60543f2ed42f7a7a4a50_hu18310070060053239448.png 1024w"
loading="lazy"
alt="image-1673275560552"
class="gallery-image"
data-flex-grow="182"
data-flex-basis="438px"
>
发现是这个&lt;code>consumerTable&lt;/code>{.language-plaintext
.highlighter-rouge}取出来为null&lt;/p>
&lt;div class="highlight hljs language-swift">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">private final ConcurrentMap&amp;lt;String/* Group */, ConsumerGroupInfo&amp;gt; consumerTable =
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> new ConcurrentHashMap&amp;lt;String, ConsumerGroupInfo&amp;gt;(1024);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这个对象是一个ConcurrentMap,那如果取出来为null的话,肯定是没有这个key,也就是没有这个消费者组的信息,我明明启动了消费者组怎么可能没有呢,那肯定是在哪个地方给remove掉了,接下来查一下调用remove的方法都在哪里&lt;/p>
&lt;div class="highlight hljs language-php">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">org.apache.rocketmq.broker.client.ConsumerManager#doChannelCloseEvent
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">org.apache.rocketmq.broker.client.ConsumerManager#unregisterConsumer
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>就是这两个方法的逻辑里有remove方法&lt;br>
查到这里我感觉需要看一下broker端的日志了&lt;br>
&lt;img src="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/28f6464de4902ef5c72df2f4ba75079cf183ddfb.png"
width="1700"
height="730"
srcset="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/28f6464de4902ef5c72df2f4ba75079cf183ddfb_hu8519575820523416503.png 480w, https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/28f6464de4902ef5c72df2f4ba75079cf183ddfb_hu1184291470286752077.png 1024w"
loading="lazy"
alt="image-1673275579595"
class="gallery-image"
data-flex-grow="232"
data-flex-basis="558px"
>
这么多日志,从何看起呢,先挑着日志多的看吧,毕竟卡卡刷屏,肯定日志量大,文件也不小&lt;br>
这里的截图应该是已经归档过了的,现在broker.log才16M,记得出问题的时候100多M&lt;br>
先看&lt;code>broker.log&lt;/code>{.language-plaintext .highlighter-rouge}吧&lt;br>
&lt;img src="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/436e3f0d493633e9a3d51b7bae183ca35178bfd7.png"
width="1700"
height="1274"
srcset="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/436e3f0d493633e9a3d51b7bae183ca35178bfd7_hu13359182595933127471.png 480w, https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/436e3f0d493633e9a3d51b7bae183ca35178bfd7_hu7612249787065748031.png 1024w"
loading="lazy"
alt="image-1673275588102"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="320px"
>
我从茫茫的打印日志中找到了这个&lt;br>
看着大概就是说新创建了一个消费者组信息,然后直接就被删掉了&lt;br>
只有&lt;code>NETTY EVENT: remove not active channel&lt;/code>{.language-plaintext
.highlighter-rouge}这个是WARN,先查查这个在哪里报的吧&lt;br>
&lt;img src="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/acec26f1862b6470daf63481884bd8cedc520846.png"
width="2880"
height="1630"
srcset="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/acec26f1862b6470daf63481884bd8cedc520846_hu5325689150893750266.png 480w, https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/acec26f1862b6470daf63481884bd8cedc520846_hu1914047135093342266.png 1024w"
loading="lazy"
alt="image-1673275598072"
class="gallery-image"
data-flex-grow="176"
data-flex-basis="424px"
>
正好在&lt;code>org.apache.rocketmq.broker.client.ConsumerManager#doChannelCloseEvent&lt;/code>{.language-plaintext
.highlighter-rouge}&lt;br>
直接把&lt;code>org.apache.rocketmq.broker.client.ConsumerManager#unregisterConsumer&lt;/code>{.language-plaintext
.highlighter-rouge}这个排除了&lt;br>
那么这个方法的上一层就是&lt;br>
&lt;img src="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/12383f9abe4b7c55a16875f7a9cc41fcffdaf0be.png"
width="2880"
height="1540"
srcset="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/12383f9abe4b7c55a16875f7a9cc41fcffdaf0be_hu15050229149193300450.png 480w, https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/12383f9abe4b7c55a16875f7a9cc41fcffdaf0be_hu13505675502683830459.png 1024w"
loading="lazy"
alt="image-1673275615179"
class="gallery-image"
data-flex-grow="187"
data-flex-basis="448px"
>
&lt;img src="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/1a187f5039ebc5252bf4186874e6cb2a0f777df8.png"
width="2880"
height="1630"
srcset="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/1a187f5039ebc5252bf4186874e6cb2a0f777df8_hu7629140528927564519.png 480w, https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/1a187f5039ebc5252bf4186874e6cb2a0f777df8_hu13800691455023831999.png 1024w"
loading="lazy"
alt="image-1673317524836"
class="gallery-image"
data-flex-grow="176"
data-flex-basis="424px"
>
这些方法都是在一个run()方法里边跑的&lt;br>
&lt;img src="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/bfc8a9df5cb6217779984ae3eb2bd98c2cf7a825.png"
width="2880"
height="1630"
srcset="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/bfc8a9df5cb6217779984ae3eb2bd98c2cf7a825_hu862260957902173033.png 480w, https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/bfc8a9df5cb6217779984ae3eb2bd98c2cf7a825_hu11979201426847824021.png 1024w"
loading="lazy"
alt="image-1673317579342"
class="gallery-image"
data-flex-grow="176"
data-flex-basis="424px"
>
看的出来&lt;code>this.eventQueue&lt;/code>{.language-plaintext
.highlighter-rouge}这个是存放NettyEvent的地方,而这三个方法都是从这里调用的&lt;br>
那就看什么地方会把NettyEvent放到eventQueue中&lt;br>
&lt;img src="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/07ef0c64f82bf055ddddb1cf1fa848789dc814a0.png"
width="2880"
height="1630"
srcset="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/07ef0c64f82bf055ddddb1cf1fa848789dc814a0_hu4560386478078590610.png 480w, https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/07ef0c64f82bf055ddddb1cf1fa848789dc814a0_hu12464421191424880652.png 1024w"
loading="lazy"
alt="image-1673275637210"
class="gallery-image"
data-flex-grow="176"
data-flex-basis="424px"
>
搜一下只有这个类中的&lt;code>putNettyEvent&lt;/code>{.language-plaintext
.highlighter-rouge}方法才会add&lt;br>
那再看看这个方法是从哪里调用的吧&lt;br>
&lt;img src="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/1034965014df54e2102ffb246a483c9cc5305996.png"
width="2880"
height="796"
srcset="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/1034965014df54e2102ffb246a483c9cc5305996_hu13337304919166140261.png 480w, https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/1034965014df54e2102ffb246a483c9cc5305996_hu12222658445360127312.png 1024w"
loading="lazy"
alt="image-1673275644911"
class="gallery-image"
data-flex-grow="361"
data-flex-basis="868px"
>
一共有这么多地方调用,想来咱们看的是broker的代码,那肯定是server吧,那就锁定在这四个了&lt;br>
那也可以看到第一个type类型是&lt;code>CONNECT&lt;/code>{.language-plaintext
.highlighter-rouge}直接排除,剩下的三个,&lt;br>
分别都点进去看看,会发现这三个方法都伴随着日志打印&lt;br>
&lt;img src="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/1ae6af7c6736ee44c7f2df54533d45e8423f8d33.png"
width="2248"
height="546"
srcset="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/1ae6af7c6736ee44c7f2df54533d45e8423f8d33_hu5154438110837722469.png 480w, https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/1ae6af7c6736ee44c7f2df54533d45e8423f8d33_hu7773358236729183257.png 1024w"
loading="lazy"
alt="image-1673275651482"
class="gallery-image"
data-flex-grow="411"
data-flex-basis="988px"
>
那咱们就去看看日志打印,然后定位出来具体是哪种事件导致了删除我的消费者组信息&lt;br>
这里就有个问题,server端那么多日志文件应该看哪个哇?&lt;br>
我想到了看下这个代码是在哪个包下&lt;br>
&lt;img src="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/0a52c9b14c2f27cb369fa14be28235f23254d92b.png"
width="2880"
height="1630"
srcset="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/0a52c9b14c2f27cb369fa14be28235f23254d92b_hu16689087682121658870.png 480w, https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/0a52c9b14c2f27cb369fa14be28235f23254d92b_hu3046792840020756010.png 1024w"
loading="lazy"
alt="image-1673275657915"
class="gallery-image"
data-flex-grow="176"
data-flex-basis="424px"
>
可以看到是remoting,那就看对应名字的log,此时打开消费者,观察日志&lt;br>
&lt;img src="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/1489559b99e23e383d9e933a1f788625788e54ae.png"
width="1700"
height="1192"
srcset="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/1489559b99e23e383d9e933a1f788625788e54ae_hu10114324260063368544.png 480w, https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/1489559b99e23e383d9e933a1f788625788e54ae_hu11857582257886783192.png 1024w"
loading="lazy"
alt="image-1673275665371"
class="gallery-image"
data-flex-grow="142"
data-flex-basis="342px"
>
可以看到Active之后,直接Inactive,那肯定是这个事件导致的&lt;br>
接下来搜这个日志打印,然后就会发现是触发了CLOSE事件&lt;br>
&lt;img src="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/3f5fe3828f4d0c7b3d0a921faad1efc8d4145bd4.png"
width="2880"
height="1630"
srcset="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/3f5fe3828f4d0c7b3d0a921faad1efc8d4145bd4_hu16208914043498295927.png 480w, https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/3f5fe3828f4d0c7b3d0a921faad1efc8d4145bd4_hu15308443875016328632.png 1024w"
loading="lazy"
alt="image-1673275671584"
class="gallery-image"
data-flex-grow="176"
data-flex-basis="424px"
>
看到这里就有点懵了,首先是CLOSE事件,这就说明是正常关闭,是因为客户端不活跃导致的,那怎么想都是客户端有问题哇&lt;/p>
&lt;h2 id="3-继续查看客户端日志">3 继续查看客户端日志
&lt;/h2>&lt;p>兜兜转转一圈,又回到了客户端日志,因为之前刷屏的都是&lt;code>CODE: 24 DESC: the consumer's group info not exist&lt;/code>{.language-plaintext
.highlighter-rouge},但是这个是WARN类型的日志,我突发奇想,搜搜ERROR看看,果然找到了真正的问题&lt;br>
&lt;img src="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/9992a2ab8a6898817fb2aac81d79fd346f5bf18e.png"
width="1700"
height="1196"
srcset="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/9992a2ab8a6898817fb2aac81d79fd346f5bf18e_hu5251198684402432423.png 480w, https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/9992a2ab8a6898817fb2aac81d79fd346f5bf18e_hu21342142495373064.png 1024w"
loading="lazy"
alt="image-1673275683289"
class="gallery-image"
data-flex-grow="142"
data-flex-basis="341px"
>
这个东西熟啊,这个是Netty的一个解码类,如果消息太长的话会报错,那这个想来应该是消息太长,但是我的消息肯定不会超过1M哇,通过堆栈可以看到是&lt;code>org.apache.rocketmq.remoting.netty.NettyDecoder.decode&lt;/code>这里报错的,&lt;br>
&lt;img src="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/5f3fa88d6cab4643de2c2f58584dc352dd618df2.png"
width="2880"
height="1630"
srcset="https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/5f3fa88d6cab4643de2c2f58584dc352dd618df2_hu515172839035203593.png 480w, https://chenchenfang.github.io/p/rocketmq%E6%B6%88%E6%81%AF%E8%BF%87%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E8%B4%B9%E4%B8%8D%E4%BA%86%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E5%A0%86%E7%A7%AF/5f3fa88d6cab4643de2c2f58584dc352dd618df2_hu1917196237831815075.png 1024w"
loading="lazy"
alt="image-1673317738849"
class="gallery-image"
data-flex-grow="176"
data-flex-basis="424px"
>
报错的是42行,那这个就是说当前消息太大了,解码出了问题,我猜想是把多个消息包装成一个大的消息,然后消费者client在进行解包处理,因为我的消息可能存才接近1M的,然后我一次获取100个消息,这样合并的话肯定会超过这个&lt;code>16777216&lt;/code>
于是我在消费者启动上增加-Dcom.rocketmq.remoting.frameMaxLength=167772160,增加10倍看看,重新启动发现有效果,比之前好点了,起码不是刷屏报错了,但是还是不正常,偶尔还是有刷屏,Dashboard上也是一会有消费者一会没有,这样子还是不正常,那这样子的话只能把一次获取消息的个数减少了,于是我减少到了10,也就是这个参数&lt;code>consumer.pullBatchSize = 10&lt;/code>
到这里这个报错总算是没有了,以我目前的技术水平,算是解决了问题,但是还是没有找到问题出在哪里&lt;br>
&lt;code>RemotingUtil.closeChannel(ctx.channel());&lt;/code>其中报错之后会调用这个关闭channel,估计是因为这个,具体之后再学习学习吧.&lt;/p>
&lt;h2 id="4-总结">4 总结
&lt;/h2>&lt;p>通过这次的源码跟踪查问题,体会到了RocketMQ的消息真的不能太大,不然会出现各种各样奇怪的问题,但是我们业务那边的消息如果按一个一个发送那真的是太多了,只能是业务那边合并成一个消息,然后再批量发到MQ,这就导致了单个消息可能接近1M,同时消费者的话一次拉取消息也不能太多&amp;hellip;毕竟太多也处理不过来,索性减低一下速度,也是没有问题的,问题解决了,接下来就是把生产的东西往MQ中迁移了,希望不会再有问题&amp;hellip;&lt;/p></description></item><item><title>java.lang.NoSuchFieldError 报错解决方法</title><link>https://chenchenfang.github.io/p/java.lang.nosuchfielderror-%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</link><pubDate>Thu, 30 Jun 2022 23:35:00 +0800</pubDate><guid>https://chenchenfang.github.io/p/java.lang.nosuchfielderror-%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</guid><description>&lt;h1 id="javalangnosuchfielderror-报错排查问题">java.lang.NoSuchFieldError 报错排查问题
&lt;/h1>&lt;p>&lt;img src="https://chenchenfang.github.io/p/java.lang.nosuchfielderror-%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/a9c58a0b3a6a0b25b08486d487f39d56010073a9.png"
width="1984"
height="754"
srcset="https://chenchenfang.github.io/p/java.lang.nosuchfielderror-%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/a9c58a0b3a6a0b25b08486d487f39d56010073a9_hu13077104781378628132.png 480w, https://chenchenfang.github.io/p/java.lang.nosuchfielderror-%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/a9c58a0b3a6a0b25b08486d487f39d56010073a9_hu18037183064699596216.png 1024w"
loading="lazy"
alt="image"
class="gallery-image"
data-flex-grow="263"
data-flex-basis="631px"
>&lt;/p>
&lt;h2 id="排查过程">排查过程
&lt;/h2>&lt;ol>
&lt;li>报这个错的根本原因是&lt;strong>运行时&lt;/strong>找不到对应的变量,那么为什么会找不到呢,因为运行的时候使用了错误的类&lt;/li>
&lt;li>为什么会使用错误的类呢,是因为使用了错误版本的jar包&lt;/li>
&lt;li>怎么会使用到错误的jar包呢 明明编译的时候好好的&lt;br>
我这个跟业务有点关系,对接别人的sdk,他们文档中写的是把5个jar包上传到自己的maven私服,然后项目中就可以使用了,最开始以为是他们自己的私有的jar,后来发现不是这样,有开源项目的jar,&lt;code>bcprov-jdk15on&lt;/code>这个加解密的包&lt;br>
上传到私库的时候,使用了跟开源库不同的groupId,导致打出来的包里有两个不同版本的相同jar包,导致运行时使用了错误的jar包的类&lt;/li>
&lt;li>所以才会报这个错误&lt;/li>
&lt;/ol>
&lt;p>于是我把自己项目中的&lt;code>bcprov-jdk15on&lt;/code>版本升级到了sdk给的版本,&lt;br>
就可以正常运行了&lt;/p></description></item><item><title>Linux下的atime mtime ctime查看以及修改</title><link>https://chenchenfang.github.io/p/linux%E4%B8%8B%E7%9A%84atime-mtime-ctime%E6%9F%A5%E7%9C%8B%E4%BB%A5%E5%8F%8A%E4%BF%AE%E6%94%B9/</link><pubDate>Mon, 18 Apr 2022 22:27:00 +0800</pubDate><guid>https://chenchenfang.github.io/p/linux%E4%B8%8B%E7%9A%84atime-mtime-ctime%E6%9F%A5%E7%9C%8B%E4%BB%A5%E5%8F%8A%E4%BF%AE%E6%94%B9/</guid><description>&lt;h2 id="1三个时间的含义-1e4b889e4b8aae697b6e997b4e79a84e590abe4b989-tabindex-1">1.三个时间的含义 {#1.%E4%B8%89%E4%B8%AA%E6%97%B6%E9%97%B4%E7%9A%84%E5%90%AB%E4%B9%89 tabindex=&amp;quot;-1&amp;quot;}
&lt;/h2>&lt;ul>
&lt;li>access time （atime）&lt;br>
当&amp;quot;该文件的内容被取用&amp;quot;时，就会更新这个读取时间 （access）。&lt;/li>
&lt;li>modification time （mtime）&lt;br>
当该文件的&amp;quot;内容数据&amp;quot;变更时，就会更新这个时间，内容数据指的是文件的内容，而不是文件的属性或权限。&lt;/li>
&lt;li>status time （ctime）&lt;br>
当该文件的&amp;quot;状态 （status）&amp;ldquo;改变时，就会更新这个时间。&lt;br>
举例来说，像是权限与属性被更改了，文件内容修改，都会修改这个时间。&lt;/li>
&lt;/ul>
&lt;h2 id="2查看这三个时间的命令-2e69fa5e79c8be8bf99e4b889e4b8aae697b6e997b4e79a84e591bde4bba4-tabindex-1">2.查看这三个时间的命令 {#2.%E6%9F%A5%E7%9C%8B%E8%BF%99%E4%B8%89%E4%B8%AA%E6%97%B6%E9%97%B4%E7%9A%84%E5%91%BD%E4%BB%A4 tabindex=&amp;quot;-1&amp;rdquo;}
&lt;/h2>&lt;h3 id="1stat命令-1state591bde4bba4-tabindex-1">1.stat命令 {#1.stat%E5%91%BD%E4%BB%A4 tabindex=&amp;quot;-1&amp;quot;}
&lt;/h3>&lt;div class="highlight shell hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">[root@agent-54 ~]# stat a.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> File: &amp;#34;a.txt&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Size: 0 Blocks: 0 IO Block: 4096 普通空文件
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Device: fd01h/64769d Inode: 394816 Links: 1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Access: 2021-01-01 01:01:00.000000000 +0800
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Modify: 2021-01-01 01:01:00.000000000 +0800
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Change: 2022-04-18 21:50:49.546704098 +0800
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>里边三个时间分别对应介绍的三个时间&lt;/p>
&lt;h3 id="2ls查看-2lse69fa5e79c8b-tabindex-1">2.ls查看 {#2.ls%E6%9F%A5%E7%9C%8B tabindex=&amp;quot;-1&amp;quot;}
&lt;/h3>&lt;div class="highlight shell hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">[root@agent-54 ~]# ls --full-time --time=atime a.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-r--r-- 1 root root 0 2021-01-01 01:01:00.000000000 +0800 a.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[root@agent-54 ~]# ls --full-time a.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-r--r-- 1 root root 0 2021-01-01 01:01:00.000000000 +0800 a.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[root@agent-54 ~]# ls --full-time --time=ctime a.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-r--r-- 1 root root 0 2022-04-18 21:50:49.546704098 +0800 a.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="3touch修改access-time和modification-time-3touche4bfaee694b9access-timee5928cmodification-time-tabindex-1">3.touch修改access time和modification time {#3.touch%E4%BF%AE%E6%94%B9access-time%E5%92%8Cmodification-time tabindex=&amp;quot;-1&amp;quot;}
&lt;/h2>&lt;blockquote>
&lt;p>ctime是修改不了的，它是随着另外两个时间的变化而变化&lt;/p>
&lt;/blockquote>
&lt;p>首先我们来看一个 touch的help信息&lt;/p>
&lt;div class="highlight shell hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">[root@agent-54 ~]# touch --help
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">用法：touch [选项]... 文件...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">将每个文件的访问时间和修改时间改为当前时间。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">不存在的文件将会被创建为空文件，除非使用-c 或-h 选项。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">如果文件名为&amp;#34;-&amp;#34;则特殊处理，更改与标准输出相关的文件的访问时间。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">长选项必须使用的参数对于短选项时也是必需使用的。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -a 只更改访问时间
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -c, --no-create 不创建任何文件
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -d, --date=字符串 使用指定字符串表示时间而非当前时间
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -f (忽略)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -h, --no-dereference 会影响符号链接本身，而非符号链接所指示的目的地
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> (当系统支持更改符号链接的所有者时，此选项才有用)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -m 只更改修改时间
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -r, --reference=文件 使用指定文件的时间属性而非当前时间
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -t STAMP 使用[[CC]YY]MMDDhhmm[.ss] 格式的时间而非当前时间
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> --time=WORD 使用WORD 指定的时间：access、atime、use 都等于-a
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 选项的效果，而modify、mtime 等于-m 选项的效果
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> --help 显示此帮助信息并退出
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> --version 显示版本信息并退出
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">请注意，-d 和-t 选项可接受不同的时间/日期格式。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">请向bug-coreutils@gnu.org 报告touch 的错误
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">GNU coreutils 项目主页：&amp;lt;http://www.gnu.org/software/coreutils/&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">GNU 软件一般性帮助：&amp;lt;http://www.gnu.org/gethelp/&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">请向&amp;lt;http://translationproject.org/team/zh_CN.html&amp;gt; 报告touch 的翻译错误
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">要获取完整文档，请运行：info coreutils &amp;#39;touch invocation&amp;#39;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>其中 -a -m 用来修改不同的时间，-t 指定要修改的具体时间&lt;/p>
&lt;div class="highlight shell hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">[root@agent-54 ~]# touch -a -t 202002030355 a.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[root@agent-54 ~]# stat a.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> File: &amp;#34;a.txt&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Size: 0 Blocks: 0 IO Block: 4096 普通空文件
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Device: fd01h/64769d Inode: 394816 Links: 1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Access: 2020-02-03 03:55:00.000000000 +0800
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Modify: 2021-01-01 01:01:00.000000000 +0800
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Change: 2022-04-18 22:23:12.490390037 +0800
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[root@agent-54 ~]# touch -m -t 202006060606 a.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[root@agent-54 ~]# stat a.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> File: &amp;#34;a.txt&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Size: 0 Blocks: 0 IO Block: 4096 普通空文件
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Device: fd01h/64769d Inode: 394816 Links: 1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Access: 2020-02-03 03:55:00.000000000 +0800
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Modify: 2020-06-06 06:06:00.000000000 +0800
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Change: 2022-04-18 22:26:28.588715086 +0800
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>ClassNotFoundException 和 NoClassDefFoundError 区别</title><link>https://chenchenfang.github.io/p/classnotfoundexception-%E5%92%8C-noclassdeffounderror-%E5%8C%BA%E5%88%AB/</link><pubDate>Sun, 11 Jul 2021 14:33:00 +0800</pubDate><guid>https://chenchenfang.github.io/p/classnotfoundexception-%E5%92%8C-noclassdeffounderror-%E5%8C%BA%E5%88%AB/</guid><description>&lt;h1 id="classnotfoundexception-和-noclassdeffounderror">ClassNotFoundException 和 NoClassDefFoundError
&lt;/h1>&lt;h2 id="1-classnotfoundexception">1. &lt;em>ClassNotFoundException&lt;/em>
&lt;/h2>&lt;blockquote>
&lt;p>&lt;em>Class.forName()&lt;/em>, &lt;em>ClassLoader.loadClass()&lt;/em> or
&lt;em>ClassLoader.findSystemClass()&lt;/em> 一般是这几个方法,运行的时候会报错&lt;/p>
&lt;p>因为这个去加载不存在的类&lt;/p>
&lt;p>编译期间就没有这个类&lt;/p>
&lt;/blockquote>
&lt;div class="highlight java hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">public void givenNoDrivers_whenLoadDriverClass_thenClassNotFoundException()
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> throws ClassNotFoundException {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Class.forName(&amp;#34;oracle.jdbc.driver.OracleDriver&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="2noclassdeffounderror">2.&lt;em>NoClassDefFoundError&lt;/em>
&lt;/h2>&lt;blockquote>
&lt;p>一般是因为类初始化 没有成功
因为类初始化只会初始化一次,第二次调用这个class
用于生成对象或者是静态变量,都会报错&lt;/p>
&lt;p>编译期间有这个类&lt;/p>
&lt;/blockquote>
&lt;div class="highlight java hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">public&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">ClassWithInitErrors&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">static&lt;/span> &lt;span class="ne">int&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">public&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">NoClassDefFoundErrorExample&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">ClassWithInitErrors&lt;/span> &lt;span class="n">getClassWithInitErrors&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ClassWithInitErrors&lt;/span> &lt;span class="n">test&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">ClassWithInitErrors&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="n">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Throwable&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">ClassWithInitErrors&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">test&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">@&lt;/span>&lt;span class="n">Test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">public&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">givenInitErrorInClass_whenloadClass_thenNoClassDefFoundError&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NoClassDefFoundErrorExample&lt;/span> &lt;span class="n">sample&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">NoClassDefFoundErrorExample&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">sample&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getClassWithInitErrors&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>spring MVC 校验Get请求的参数</title><link>https://chenchenfang.github.io/p/spring-mvc-%E6%A0%A1%E9%AA%8Cget%E8%AF%B7%E6%B1%82%E7%9A%84%E5%8F%82%E6%95%B0/</link><pubDate>Sun, 16 May 2021 07:22:00 +0800</pubDate><guid>https://chenchenfang.github.io/p/spring-mvc-%E6%A0%A1%E9%AA%8Cget%E8%AF%B7%E6%B1%82%E7%9A%84%E5%8F%82%E6%95%B0/</guid><description>&lt;h1 id="spring-mvc-校验get请求的参数">spring MVC 校验Get请求的参数
&lt;/h1>&lt;blockquote>
&lt;p>很多时候都是使用
POST请求然后传入请求体，用类来接受请求数据，但有时候就只有一个参数，不想去创建类了，然后也想使用校验注解去校验这个参数，那么接下来会介绍这种方法。&lt;/p>
&lt;/blockquote>
&lt;div class="highlight java hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">//在类上声明注解 @Validated 下方的参数可以直接使用 校验注解 进行校验
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@Validated
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">public class UserAdminController {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">public JsonResult generatePortalJwtTokenByAdminGroupId( @NotNull Integer adminGroupId) throws CybercloudException {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Java内存区域</title><link>https://chenchenfang.github.io/p/java%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F/</link><pubDate>Mon, 22 Mar 2021 08:02:07 +0800</pubDate><guid>https://chenchenfang.github.io/p/java%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F/</guid><description>&lt;h1 id="java内存区域">Java内存区域
&lt;/h1>&lt;p>首先看一下 Java 内存区域图:&lt;/p>
&lt;p>&lt;img src="https://chenchenfang.github.io/p/java%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F/a5981dcdec7fcd97546177b37605d20357d4a1cb.png"
width="1162"
height="1213"
srcset="https://chenchenfang.github.io/p/java%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F/a5981dcdec7fcd97546177b37605d20357d4a1cb_hu13661821706008954924.png 480w, https://chenchenfang.github.io/p/java%E5%86%85%E5%AD%98%E5%8C%BA%E5%9F%9F/a5981dcdec7fcd97546177b37605d20357d4a1cb_hu3335017401986461222.png 1024w"
loading="lazy"
alt="java内存区域.png"
class="gallery-image"
data-flex-grow="95"
data-flex-basis="229px"
>&lt;/p>
&lt;h2 id="程序计数器">程序计数器
&lt;/h2>&lt;p>程序计数器是一块较小的内存空间,它可以看做是当前线程所执行的字节码的行号指示器.&lt;/p>
&lt;p>Java虚拟机的概念模型里,字节码解释器工作时就是通过改变这个计数器的值来选取下一条需要执行的字节码执行.&lt;/p>
&lt;p>在多线程中,为了线程切换后能恢复到正确的执行位置,每条线程都需要有一个独立的程序计数器,各个线程之间计数器互不影响,独立存储,所以为&amp;quot;线程私有&amp;quot;的内存.&lt;/p>
&lt;h2 id="java虚拟机栈">Java虚拟机栈
&lt;/h2>&lt;p>Java虚拟机栈也是&amp;quot;线程私有&amp;quot;,声明周期与线程相同.&lt;/p>
&lt;p>Java虚拟机栈描述的是&lt;code>Java方法执行的内存模型&lt;/code>&lt;/p>
&lt;p>每个方法被执行的时候,Java虚拟机都会创建一个栈帧用于存储&lt;code>局部变量表&lt;/code>操作数栈 动态连接 方法出口等信息.&lt;/p>
&lt;p>每一个方法被调用直至执行完毕的过程,就对应着一个栈帧在虚拟机栈中从入栈到出栈的过程.&lt;/p>
&lt;p>一般会把内存分为 堆内存和栈内存, 这里说的栈内存就是指
Java虚拟机栈中的局部变量表&lt;/p>
&lt;p>局部变量表中 存放了这个方法运行时各种Java虚拟机基本数据类型(boolean byte
char short int float long double),对象引用和returnAddress类型.&lt;/p>
&lt;p>这些数据类型的存储空间以局部变量槽(Slot)表示,其中long和double占用2个槽,其他占用1个槽,局部变量表所需的局部变量槽的数量在编译期间确定下来,一个槽的真正使用内存空间的多少,取决于具体虚拟机如何实现,可能是
32位也可能是64位&lt;/p></description></item><item><title>java 四舍五入问题</title><link>https://chenchenfang.github.io/p/java-%E5%9B%9B%E8%88%8D%E4%BA%94%E5%85%A5%E9%97%AE%E9%A2%98/</link><pubDate>Sat, 02 Jan 2021 15:42:00 +0800</pubDate><guid>https://chenchenfang.github.io/p/java-%E5%9B%9B%E8%88%8D%E4%BA%94%E5%85%A5%E9%97%AE%E9%A2%98/</guid><description>&lt;h1 id="java-四舍五入问题">java 四舍五入问题
&lt;/h1>&lt;blockquote>
&lt;p>前两天,在工作中遇到了一个问题,公司运营说:&amp;quot;我上传数据,没有给我四舍五入,是不是你程序有问题?&amp;quot;.那我当时肯定是想程序都用这么长时间了...不能有问题吧.
但是还是说:&amp;quot;把具体的问题数据,以及什么可以重现,都说一下&amp;quot;,接下来是解决问题的心路历程.&lt;/p>
&lt;/blockquote>
&lt;h2 id="复现bug">复现bug
&lt;/h2>&lt;p>问题数据已经有了,接下来就是如何重现这个问题.主要的问题代码就是下边&lt;/p>
&lt;div class="highlight java hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">long round = Math.round(Double.valueOf(&amp;#34;150.795&amp;#34;) * 100);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> System.out.println(round);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>其中&lt;code>Double.valueOf(&amp;quot;150.795&amp;quot;)&lt;/code>{.language-plaintext
.highlighter-rouge}没有问题,然后 做&lt;code>*100&lt;/code>{.language-plaintext
.highlighter-rouge}操作,这里结果就有问题了,结果是&lt;code>15079.499999999998&lt;/code>{.language-plaintext
.highlighter-rouge}.&lt;/strong>&lt;/p>
&lt;p>之前都说 double不准什么的,也没体会到,现在真的是体会到了......&lt;/p>
&lt;h2 id="解决问题">解决问题
&lt;/h2>&lt;p>最终是需要实现
四舍五入保留两位小数,那就去看&lt;code>BigDecimal&lt;/code>{.language-plaintext
.highlighter-rouge}这个吧,都说这个计算是准确的.&lt;/p>
&lt;div class="highlight java hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"> private Double round(double f) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> BigDecimal b = BigDecimal.valueOf(f);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return b.setScale(2, BigDecimal.ROUND_HALF_UP).doubleValue();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>最终使用的是这个解决方案.&lt;/p>
&lt;p>但是这里也有个坑,就是传入的double最好是没有计算过的,不然也会出现上边
&lt;code>*100&lt;/code>{.language-plaintext .highlighter-rouge}之后结果有问题&lt;/p>
&lt;p>一般来说界面填写数值,然后传入到后端获取都是 &lt;code>String&lt;/code>{.language-plaintext
.highlighter-rouge}类型的,直接调用方法就行,如果需要计算的话,用&lt;code>BigDecimal&lt;/code>{.language-plaintext
.highlighter-rouge}计算&lt;/p></description></item><item><title>maven-shade-plugin 使用方法</title><link>https://chenchenfang.github.io/p/maven-shade-plugin-%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</link><pubDate>Fri, 01 Jan 2021 21:14:00 +0800</pubDate><guid>https://chenchenfang.github.io/p/maven-shade-plugin-%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</guid><description>&lt;h1 id="maven-shade-plugin-使用方法">maven-shade-plugin 使用方法
&lt;/h1>&lt;blockquote>
&lt;p>之所以发这个,是因为前段时间,spark项目打包,到服务器上之后,出现了不同版本jar包冲突的问题,然后使用了这个插件解决了问题.&lt;/p>
&lt;/blockquote>
&lt;h2 id="一-relocation的使用">一: relocation的使用
&lt;/h2>&lt;p>因为服务器上的jar不能删除,也不能替换,但是我用的jar包也只能用和服务器上不同的版本.&lt;/p>
&lt;p>使用这个功能可以完美的解决这个问题&lt;/p>
&lt;div class="highlight xml hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;plugin&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;artifactId&amp;gt;maven-shade-plugin&amp;lt;/artifactId&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;version&amp;gt;3.2.2&amp;lt;/version&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;executions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;execution&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;phase&amp;gt;package&amp;lt;/phase&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;goals&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;goal&amp;gt;shade&amp;lt;/goal&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/goals&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;configuration&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;relocations&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;relocation&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;!--原本的包名--&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;pattern&amp;gt;okhttp3&amp;lt;/pattern&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;!--要替换成的包名--&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;shadedPattern&amp;gt;fang7.okhttp3&amp;lt;/shadedPattern&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/relocation&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/relocations&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/configuration&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/execution&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/executions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/plugin&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这样就可以解决包名冲突的问题&lt;/p>
&lt;h2 id="二-artifactset-excludes-去掉依赖">二: artifactSet excludes 去掉依赖
&lt;/h2>&lt;div class="highlight xml hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"> &amp;lt;plugin&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;artifactId&amp;gt;maven-shade-plugin&amp;lt;/artifactId&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;version&amp;gt;3.2.2&amp;lt;/version&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;executions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;execution&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;phase&amp;gt;package&amp;lt;/phase&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;goals&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;goal&amp;gt;shade&amp;lt;/goal&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/goals&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;configuration&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;artifactSet&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;excludes&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;exclude&amp;gt;com.squareup.okhttp3:okhttp&amp;lt;/exclude&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/excludes&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/artifactSet&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/configuration&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/execution&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/executions&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;/plugin&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>将该工程依赖的部分 Jar 包 include/exclude 掉。&lt;/p></description></item><item><title>java中 YYYY-MM-dd 格式化问题</title><link>https://chenchenfang.github.io/p/java%E4%B8%AD-yyyy-mm-dd-%E6%A0%BC%E5%BC%8F%E5%8C%96%E9%97%AE%E9%A2%98/</link><pubDate>Wed, 30 Dec 2020 20:57:00 +0800</pubDate><guid>https://chenchenfang.github.io/p/java%E4%B8%AD-yyyy-mm-dd-%E6%A0%BC%E5%BC%8F%E5%8C%96%E9%97%AE%E9%A2%98/</guid><description>&lt;blockquote>
&lt;p>为什么说这个呢,因为今天新入职的开发问了我一个问题
就是今天出现的bug,日期格式化出现了明年的时间&lt;/p>
&lt;/blockquote>
&lt;p>当时并没有仔细看,由于之前用的还是
Date类(java8之后使用LocalDate类更好用),所以把LocalDate的一个代码复制给他了,试了试直接能用,也就没有管.&lt;br>
然后第二天早晨看微信公众号的时候看有人发了一个 关于
&lt;code>YYYY-MM-dd&lt;/code>的消息,然后点进去看了一下才知道应该使用
&lt;code>yyyy-MM-dd&lt;/code> ,记录一下.&lt;/p>
&lt;div class="highlight java hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"> String format = LocalDate.of(2020, 12, 27).format(DateTimeFormatter.ofPattern(&amp;#34;YYYY-MM-dd&amp;#34;));
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> System.out.println(&amp;#34;YYYY-MM-dd:&amp;#34;+format);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> format = LocalDate.of(2020, 12, 27).format(DateTimeFormatter.ofPattern(&amp;#34;yyyy-MM-dd&amp;#34;));
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> System.out.println(&amp;#34;yyyy-MM-dd:&amp;#34;+format);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> //输出的是
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> //YYYY-MM-dd:2021-12-27
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> //yyyy-MM-dd:2020-12-27
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>首先可以看源码&lt;br>
&lt;img src="https://chenchenfang.github.io/p/java%E4%B8%AD-yyyy-mm-dd-%E6%A0%BC%E5%BC%8F%E5%8C%96%E9%97%AE%E9%A2%98/116f6e456ef86b06b4d5728c328744ca00e9e8e7.png"
width="1282"
height="970"
srcset="https://chenchenfang.github.io/p/java%E4%B8%AD-yyyy-mm-dd-%E6%A0%BC%E5%BC%8F%E5%8C%96%E9%97%AE%E9%A2%98/116f6e456ef86b06b4d5728c328744ca00e9e8e7_hu11006860887278897178.png 480w, https://chenchenfang.github.io/p/java%E4%B8%AD-yyyy-mm-dd-%E6%A0%BC%E5%BC%8F%E5%8C%96%E9%97%AE%E9%A2%98/116f6e456ef86b06b4d5728c328744ca00e9e8e7_hu9096830271865980954.png 1024w"
loading="lazy"
alt="image.png"
class="gallery-image"
data-flex-grow="132"
data-flex-basis="317px"
>&lt;br>
周所在的年&lt;br>
查了一下有这个说法:&lt;br>
当天所在的周属于的年份，一周从周日开始，周六结束，只要本周跨年，那么这周就算入下一年&lt;/p>
&lt;p>总结: 用&lt;code>yyyy-MM-dd&lt;/code> 就完事了&lt;/p></description></item><item><title>Springboot中排除自动配置的 3 种方法</title><link>https://chenchenfang.github.io/p/springboot%E4%B8%AD%E6%8E%92%E9%99%A4%E8%87%AA%E5%8A%A8%E9%85%8D%E7%BD%AE%E7%9A%84-3-%E7%A7%8D%E6%96%B9%E6%B3%95/</link><pubDate>Sun, 06 Dec 2020 20:21:00 +0800</pubDate><guid>https://chenchenfang.github.io/p/springboot%E4%B8%AD%E6%8E%92%E9%99%A4%E8%87%AA%E5%8A%A8%E9%85%8D%E7%BD%AE%E7%9A%84-3-%E7%A7%8D%E6%96%B9%E6%B3%95/</guid><description>&lt;h1 id="springboot中排除自动配置的-3-种方法">Springboot中排除自动配置的 3 种方法
&lt;/h1>&lt;blockquote>
&lt;p>springboot中排除自动配置&lt;/p>
&lt;/blockquote>
&lt;h2 id="1springbootapplication-注解中去掉">1.@SpringBootApplication 注解中去掉
&lt;/h2>&lt;div class="highlight java hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">import org.springframework.boot.SpringApplication;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">import org.springframework.boot.autoconfigure.SpringBootApplication;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">import org.springframework.boot.context.properties.bind.Bindable;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">import org.springframework.boot.context.properties.bind.Binder;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">import org.springframework.context.ConfigurableApplicationContext;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@SpringBootApplication(exclude = {MyAppAutoConfiguration.class})
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">public class StartApplication {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public static void main(String[] args) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ConfigurableApplicationContext run = SpringApplication.run(StartApplication.class, args);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Binder binder = Binder.get(run.getEnvironment());
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> String s = binder.bind(&amp;#34;myapp.company&amp;#34;, Bindable.of(String.class)).get();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> System.out.println(s);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="2enableautoconfiguration注解中去掉">2.@EnableAutoConfiguration注解中去掉
&lt;/h2>&lt;div class="highlight java hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">import org.springframework.context.annotation.Configuration;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@Configuration
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@EnableAutoConfiguration(exclude = {MyAppAutoConfiguration.class})
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">public class ConfigTest {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="3配置文件中去掉">3.配置文件中去掉
&lt;/h2>&lt;div class="highlight yml hljs language-yaml">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">server:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> port: 8081
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">myapp:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> name: 嘿嘿嘿
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> company: 我是公司
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">spring:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> autoconfigure:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> exclude:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - com.fang7.spring.boot.autoconfigure.MyAppAutoConfiguration
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>java创建线程的几种方式</title><link>https://chenchenfang.github.io/p/java%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/</link><pubDate>Thu, 19 Nov 2020 22:33:07 +0800</pubDate><guid>https://chenchenfang.github.io/p/java%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/</guid><description>&lt;h1 id="java创建线程的几种方式">java创建线程的几种方式
&lt;/h1>&lt;h2 id="一-继承thread">一: 继承Thread
&lt;/h2>&lt;p>相当简单...&lt;/p>
&lt;p>重写run方法即可&lt;/p>
&lt;div class="highlight java hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">public&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">TRunnbale&lt;/span> &lt;span class="k">extends&lt;/span> &lt;span class="ne">Thread&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="k">static&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ne">String&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">TRunnbale&lt;/span> &lt;span class="n">tRunnbale&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">TRunnbale&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">tRunnbale&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">start&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">Override&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">run&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;我要跑线程了&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="二实现runnable接口">二:实现Runnable接口
&lt;/h2>&lt;p>这个是最简单的方式,直接实现Runnable接口 然后实现run()方法&lt;/p>
&lt;p>最后放入 new Thread()中,然后 start()执行就行&lt;/p>
&lt;div class="highlight java hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">public class TRunnbale {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public static void main(String[] args) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> new Thread(new MyTask()).start();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class MyTask implements Runnable{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> @Override
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public void run() {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> System.out.println(&amp;#34;我要跑线程了!&amp;#34;);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="三-实现callable接口">三: 实现Callable接口
&lt;/h2>&lt;p>这个接口里需要实现的那个方法,是有一个返回值的,然后可以完成每个线程结束后,返回一个参数,线程外部可以接受这个参数&lt;/p>
&lt;p>&lt;img src="https://chenchenfang.github.io/p/java%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/e44d91252665822a8f2728bb7f6a568e82c8f1e7.png"
width="996"
height="474"
srcset="https://chenchenfang.github.io/p/java%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/e44d91252665822a8f2728bb7f6a568e82c8f1e7_hu10240068550462458320.png 480w, https://chenchenfang.github.io/p/java%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/e44d91252665822a8f2728bb7f6a568e82c8f1e7_hu3468852248760989844.png 1024w"
loading="lazy"
alt="Callable接口"
class="gallery-image"
data-flex-grow="210"
data-flex-basis="504px"
>&lt;/p>
&lt;div class="highlight java hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">public&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">TRunnbale&lt;/span> &lt;span class="k">extends&lt;/span> &lt;span class="ne">Thread&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="k">static&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ne">String&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">FutureTask&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="ne">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">futureTask&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">FutureTask&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">new&lt;/span> &lt;span class="n">MyTask&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">new&lt;/span> &lt;span class="ne">Thread&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">futureTask&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;线程A&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">start&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="ne">String&lt;/span> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">futureTask&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="n">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">InterruptedException&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">e&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">printStackTrace&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="n">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ExecutionException&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">e&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">printStackTrace&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="n">MyTask&lt;/span> &lt;span class="n">implements&lt;/span> &lt;span class="n">Callable&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="ne">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">Override&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="ne">String&lt;/span> &lt;span class="n">call&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="n">throws&lt;/span> &lt;span class="n">Exception&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">Do&lt;/span> &lt;span class="n">something&lt;/span>&lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s2">&amp;#34;线程结束!&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这里有一个FutureTask&lt;/p>
&lt;p>咱们看一下这个类的源码,首先这个类实现了RunnableFuture这个接口&lt;/p>
&lt;p>RunnableFuture这个接口 有继承了Runnable和Future&lt;/p>
&lt;p>Runnable都知道是什么,这个接口是为了可以在 new Thread()中传入,&lt;/p>
&lt;p>因为 Thread最终的start()方法就是执行run()方法中的代码&lt;/p>
&lt;p>&lt;img src="https://chenchenfang.github.io/p/java%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/904ec4a8025da1191e57e4241bbdc93ee3c059e4.png"
width="660"
height="634"
srcset="https://chenchenfang.github.io/p/java%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/904ec4a8025da1191e57e4241bbdc93ee3c059e4_hu3372801225350295341.png 480w, https://chenchenfang.github.io/p/java%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/904ec4a8025da1191e57e4241bbdc93ee3c059e4_hu2689071294179682175.png 1024w"
loading="lazy"
alt="image-20201027230941948"
class="gallery-image"
data-flex-grow="104"
data-flex-basis="249px"
>&lt;/p>
&lt;p>到现在可能会迷惑
Runnable不是没有返回值么,这个Future的返回值是怎么实现的呢,&lt;/p>
&lt;p>咱们看下FutureTask的源码&lt;/p>
&lt;p>&lt;img src="https://chenchenfang.github.io/p/java%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/6c589495c27dfd6989856f8e1662db0d871c4955.png"
width="942"
height="354"
srcset="https://chenchenfang.github.io/p/java%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/6c589495c27dfd6989856f8e1662db0d871c4955_hu9802346291250314316.png 480w, https://chenchenfang.github.io/p/java%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/6c589495c27dfd6989856f8e1662db0d871c4955_hu16307387837413070085.png 1024w"
loading="lazy"
alt="image-20201027234748316"
class="gallery-image"
data-flex-grow="266"
data-flex-basis="638px"
>&lt;/p>
&lt;p>&lt;img src="https://chenchenfang.github.io/p/java%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/da3042978707bd1747c1a52d00d685f183b89ad1.png"
width="1054"
height="1076"
srcset="https://chenchenfang.github.io/p/java%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/da3042978707bd1747c1a52d00d685f183b89ad1_hu16040816811400122629.png 480w, https://chenchenfang.github.io/p/java%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/da3042978707bd1747c1a52d00d685f183b89ad1_hu2376948487222219650.png 1024w"
loading="lazy"
alt="image-20201027234618710"
class="gallery-image"
data-flex-grow="97"
data-flex-basis="235px"
>&lt;/p>
&lt;p>Thread会调用run()方法,然后里边调用了&lt;code>new FutureTask(new MyTask());&lt;/code>&lt;/p>
&lt;p>里Callable的call()方法然后把这个值设置到当前对象的outcome参数上&lt;/p>
&lt;p>&lt;img src="https://chenchenfang.github.io/p/java%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/792e2fb055d0d2bfe55a04a1762eb84ede1de80e.png"
width="1108"
height="440"
srcset="https://chenchenfang.github.io/p/java%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/792e2fb055d0d2bfe55a04a1762eb84ede1de80e_hu18261985103733459225.png 480w, https://chenchenfang.github.io/p/java%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/792e2fb055d0d2bfe55a04a1762eb84ede1de80e_hu10269348522028495762.png 1024w"
loading="lazy"
alt="image-20201027234919762"
class="gallery-image"
data-flex-grow="251"
data-flex-basis="604px"
>&lt;/p>
&lt;p>然后主线程调用FutureTask的对象的get()方法,获得outcome这个值&lt;/p>
&lt;p>&lt;img src="https://chenchenfang.github.io/p/java%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/e8c151078a7525fbc6244abe3618ea3e37cf3108.png"
width="1050"
height="358"
srcset="https://chenchenfang.github.io/p/java%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/e8c151078a7525fbc6244abe3618ea3e37cf3108_hu2085998572312797455.png 480w, https://chenchenfang.github.io/p/java%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/e8c151078a7525fbc6244abe3618ea3e37cf3108_hu17792617899252745673.png 1024w"
loading="lazy"
alt="image-20201027235213225"
class="gallery-image"
data-flex-grow="293"
data-flex-basis="703px"
>&lt;/p>
&lt;p>&lt;img src="https://chenchenfang.github.io/p/java%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/79a0b43ad438dec8a3f431385d0e019f2be183d0.png"
width="990"
height="460"
srcset="https://chenchenfang.github.io/p/java%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/79a0b43ad438dec8a3f431385d0e019f2be183d0_hu16762381944412974214.png 480w, https://chenchenfang.github.io/p/java%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/79a0b43ad438dec8a3f431385d0e019f2be183d0_hu7358368129744882305.png 1024w"
loading="lazy"
alt="image-20201027235228174"
class="gallery-image"
data-flex-grow="215"
data-flex-basis="516px"
>&lt;/p>
&lt;p>当然get()方法会堵塞当前线程,一直到获取返回值后,再往后执行,&lt;/p>
&lt;p>(之后会整理一下FutureTask的相关知识,这里就不具体说了)&lt;/p>
&lt;h2 id="四使用java多线程来创建线程">四:使用java多线程来创建线程
&lt;/h2>&lt;blockquote>
&lt;p>todo...&lt;/p>
&lt;/blockquote></description></item><item><title>sql 行变列 列变行</title><link>https://chenchenfang.github.io/p/sql-%E8%A1%8C%E5%8F%98%E5%88%97-%E5%88%97%E5%8F%98%E8%A1%8C/</link><pubDate>Fri, 06 Nov 2020 21:04:00 +0800</pubDate><guid>https://chenchenfang.github.io/p/sql-%E8%A1%8C%E5%8F%98%E5%88%97-%E5%88%97%E5%8F%98%E8%A1%8C/</guid><description>&lt;blockquote>
&lt;p>sql行变列 列变行 总是忘记,还是记下来比较好&lt;/p>
&lt;/blockquote>
&lt;h1 id="行变列">行变列
&lt;/h1>&lt;div class="highlight sql hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">CREATE TABLE tb_score(
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> id INT(11) NOT NULL auto_increment,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> userid VARCHAR(20) NOT NULL COMMENT &amp;#39;用户id&amp;#39;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> subject VARCHAR(20) COMMENT &amp;#39;科目&amp;#39;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> score DOUBLE COMMENT &amp;#39;成绩&amp;#39;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> PRIMARY KEY(id)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">)ENGINE = INNODB DEFAULT CHARSET = utf8;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">INSERT INTO tb_score(userid,subject,score) VALUES (&amp;#39;001&amp;#39;,&amp;#39;语文&amp;#39;,90);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">INSERT INTO tb_score(userid,subject,score) VALUES (&amp;#39;001&amp;#39;,&amp;#39;数学&amp;#39;,92);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">INSERT INTO tb_score(userid,subject,score) VALUES (&amp;#39;001&amp;#39;,&amp;#39;英语&amp;#39;,80);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">INSERT INTO tb_score(userid,subject,score) VALUES (&amp;#39;002&amp;#39;,&amp;#39;语文&amp;#39;,88);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">INSERT INTO tb_score(userid,subject,score) VALUES (&amp;#39;002&amp;#39;,&amp;#39;数学&amp;#39;,90);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">INSERT INTO tb_score(userid,subject,score) VALUES (&amp;#39;002&amp;#39;,&amp;#39;英语&amp;#39;,75.5);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">INSERT INTO tb_score(userid,subject,score) VALUES (&amp;#39;003&amp;#39;,&amp;#39;语文&amp;#39;,70);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">INSERT INTO tb_score(userid,subject,score) VALUES (&amp;#39;003&amp;#39;,&amp;#39;数学&amp;#39;,85);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">INSERT INTO tb_score(userid,subject,score) VALUES (&amp;#39;003&amp;#39;,&amp;#39;英语&amp;#39;,90);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">INSERT INTO tb_score(userid,subject,score) VALUES (&amp;#39;003&amp;#39;,&amp;#39;政治&amp;#39;,82);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight sql hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-mysql" data-lang="mysql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">select&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">userid&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nf">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">case&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">subject&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">when&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;语文&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">then&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">score&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;语文&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nf">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">case&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">subject&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">when&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;数学&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">then&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">score&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;数学&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nf">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">case&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">subject&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">when&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;英语&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">then&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">score&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">end&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;英语&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">tb_score&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">group&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">by&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">userid&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="列变行">列变行
&lt;/h1>&lt;div class="highlight sql hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">CREATE TABLE tb_score1(
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> id INT(11) NOT NULL auto_increment,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> userid VARCHAR(20) NOT NULL COMMENT &amp;#39;用户id&amp;#39;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> cn_score DOUBLE COMMENT &amp;#39;语文成绩&amp;#39;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> math_score DOUBLE COMMENT &amp;#39;数学成绩&amp;#39;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> en_score DOUBLE COMMENT &amp;#39;英语成绩&amp;#39;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> po_score DOUBLE COMMENT &amp;#39;政治成绩&amp;#39;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> PRIMARY KEY(id)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">)ENGINE = INNODB DEFAULT CHARSET = utf8;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">INSERT INTO tb_score1(userid,cn_score,math_score,en_score,po_score) VALUES (&amp;#39;001&amp;#39;,90,92,80,0);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">INSERT INTO tb_score1(userid,cn_score,math_score,en_score,po_score) VALUES (&amp;#39;002&amp;#39;,88,90,75.5,0);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">INSERT INTO tb_score1(userid,cn_score,math_score,en_score,po_score) VALUES (&amp;#39;003&amp;#39;,70,85,90,82);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight sql hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">select userid,&amp;#39;语文&amp;#39; as &amp;#39;subject&amp;#39;,cn_score as &amp;#39;score&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">from tb_score1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">group by userid
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">union all
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">select userid,&amp;#39;数学&amp;#39; as &amp;#39;subject&amp;#39;,math_score as &amp;#39;score&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">from tb_score1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">group by userid
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">union all
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">select userid,&amp;#39;英语&amp;#39; as &amp;#39;subject&amp;#39;,en_score as &amp;#39;score&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">from tb_score1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">group by userid
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>mysql中 GROUP_CONCAT() 的使用</title><link>https://chenchenfang.github.io/p/mysql%E4%B8%AD-group_concat-%E7%9A%84%E4%BD%BF%E7%94%A8/</link><pubDate>Wed, 04 Nov 2020 21:57:00 +0800</pubDate><guid>https://chenchenfang.github.io/p/mysql%E4%B8%AD-group_concat-%E7%9A%84%E4%BD%BF%E7%94%A8/</guid><description>&lt;blockquote>
&lt;p>最开始是让优化一个报表的SQL,因为时间太长了,然后看到join了一个表,这个表
是个group by ,然后select中使用了GROUP_CONCAT()&lt;/p>
&lt;/blockquote>
&lt;div class="highlight sql hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">SELECT
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> place_id,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> GROUP_CONCAT( appname SEPARATOR &amp;#39; &amp;#39; ) appname,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> GROUP_CONCAT( appid SEPARATOR &amp;#39; &amp;#39; ) appid,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> type,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">CASE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> WHEN GROUP_CONCAT( appid SEPARATOR &amp;#39;&amp;#39; ) = &amp;#39;&amp;#39; THEN
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#39;PC&amp;#39; ELSE GROUP_CONCAT( platform SEPARATOR &amp;#39; &amp;#39; )
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> END AS platform
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">FROM
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> places_info
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">GROUP BY
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> place_id
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这个SQL就用20秒,然后考虑做一个cache表,这样查起来就很快也很方便.&lt;br>
做cache表用的是 insert into select ,&lt;br>
然后报错&lt;/p>
&lt;div class="highlight hljs language-yaml">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">1260 - Row 20094 was cut by GROUP_CONCAT(), Time: 0.153000s
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>查了一下说是,GROUP_CONCAT()最大允许结果长度默认是1024,这个值可以设置
&lt;a class="link" href="https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_group_concat_max_len" target="_blank" rel="noopener"
>group_concat_max_len&lt;/a>&lt;/p>
&lt;div class="highlight sql hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">SET global group_concat_max_len=15000;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">SET session group_concat_max_len=15000;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>两种方式可以设置&lt;br>
我选择的是session 只针对当次回话有效.然后再执行
&lt;code>insert into select&lt;/code>{.language-plaintext .highlighter-rouge}就OK了&lt;/p></description></item><item><title>find命令常用参数</title><link>https://chenchenfang.github.io/p/find%E5%91%BD%E4%BB%A4%E5%B8%B8%E7%94%A8%E5%8F%82%E6%95%B0/</link><pubDate>Sun, 25 Oct 2020 17:53:07 +0800</pubDate><guid>https://chenchenfang.github.io/p/find%E5%91%BD%E4%BB%A4%E5%B8%B8%E7%94%A8%E5%8F%82%E6%95%B0/</guid><description>&lt;h1 id="find命令">find命令
&lt;/h1>\[-H \| -L \| -P\]\[-EXdsx\]\[-f path\]\[expression\]&lt;h2 id="-name">-name
&lt;/h2>&lt;div class="highlight shell hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">find . -name &amp;#34;*.java&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">find . -iname &amp;#34;*.java&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>iname 不区分大小写&lt;/p>
&lt;h2 id="-type">-type
&lt;/h2>&lt;div class="highlight shell hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">find . -type d
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>按类型查找&lt;/p>
&lt;p>类型参数列表：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>f&lt;/strong> 普通文件&lt;/li>
&lt;li>&lt;strong>l&lt;/strong> 符号连接&lt;/li>
&lt;li>&lt;strong>d&lt;/strong> 目录&lt;/li>
&lt;li>&lt;strong>c&lt;/strong> 字符设备&lt;/li>
&lt;li>&lt;strong>b&lt;/strong> 块设备&lt;/li>
&lt;li>&lt;strong>s&lt;/strong> 套接字&lt;/li>
&lt;li>&lt;strong>p&lt;/strong> Fifo&lt;/li>
&lt;/ul>
&lt;h2 id="-size">-size
&lt;/h2>&lt;p>文件大小单元：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>b&lt;/strong> &amp;mdash;&amp;mdash; 块（512字节）&lt;/li>
&lt;li>&lt;strong>c&lt;/strong> &amp;mdash;&amp;mdash; 字节&lt;/li>
&lt;li>&lt;strong>&lt;a class="link" href="http://man.linuxde.net/w" target="_blank" rel="noopener"
>w&lt;/a>&lt;/strong> &amp;mdash;&amp;mdash; 字（2字节）&lt;/li>
&lt;li>&lt;strong>k&lt;/strong> &amp;mdash;&amp;mdash; 千字节&lt;/li>
&lt;li>&lt;strong>M&lt;/strong> &amp;mdash;&amp;mdash; 兆字节&lt;/li>
&lt;li>&lt;strong>G&lt;/strong> &amp;mdash;&amp;mdash; 吉字节&lt;/li>
&lt;/ul>
&lt;div class="highlight shell hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">find / -size +10M
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">find / -size -10M
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">find / -size 10M
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>+搜索大于10M的&lt;/p>
&lt;p>-搜索小于10M的&lt;/p>
&lt;h2 id="maxdepth-mindepth">maxdepth mindepth
&lt;/h2>&lt;p>向下最大深度限制为3&lt;/p>
&lt;div class="highlight shell hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">find / -maxdepth 3 -type f
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>搜索出深度距离当前目录至少2个子目录的所有文件&lt;/p>
&lt;div class="highlight shell hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">find / -mindepth 2 -type f
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="-perm">-perm
&lt;/h2>&lt;h4 id="根据文件权限所有权进行匹配">根据文件权限/所有权进行匹配
&lt;/h4>&lt;div class="highlight shell hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">//权限是 644的文件
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">find . -perm 644 -type f
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">//用户是tom
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">find . -user tom
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">//组是hadoop
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">find . -group hadoop
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>其中 perm还有 &lt;code>-perm +644&lt;/code>{.language-plaintext .highlighter-rouge}
&lt;code>-perm -644&lt;/code>{.language-plaintext .highlighter-rouge}&lt;/p>
&lt;p>拿二进制比较好说一点&lt;/p>
&lt;p>644 ===&amp;gt; 110100100&lt;/p>
&lt;p>&lt;code>+&lt;/code>{.language-plaintext .highlighter-rouge}是说 位数为1的匹配上一个就行&lt;/p>
&lt;p>&lt;code>-&lt;/code>{.language-plaintext .highlighter-rouge}是说
位数为1的必须都匹配上才行&lt;/p>
&lt;p>&lt;code>+&lt;/code>{.language-plaintext .highlighter-rouge} &lt;code>-&lt;/code>{.language-plaintext
.highlighter-rouge}的0位都不用管&lt;/p>
&lt;h2 id="-exec">-exec
&lt;/h2>&lt;div class="highlight shell hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">find . -type f -name &amp;#34;*.txt&amp;#34; -exec cat {} \;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>{}代表的是 前边查出来的那些文件的路径及文件名&lt;/p>
&lt;div class="highlight shell hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="err">❯&lt;/span> &lt;span class="n">find&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">size&lt;/span> &lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="n">M&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">exec&lt;/span> &lt;span class="n">ls&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">l&lt;/span> &lt;span class="p">{}&lt;/span> \&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">-&lt;/span>&lt;span class="n">rw&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="err">@&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="n">ziang&lt;/span> &lt;span class="n">staff&lt;/span> &lt;span class="mi">184354523&lt;/span> &lt;span class="mi">10&lt;/span> &lt;span class="mi">23&lt;/span> &lt;span class="mi">17&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">45&lt;/span> &lt;span class="o">./&lt;/span>&lt;span class="n">spark&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mf">2.0&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">bin&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">hadoop2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mf">6.&lt;/span>&lt;span class="n">tgz&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">❯&lt;/span> &lt;span class="n">find&lt;/span> &lt;span class="o">~/&lt;/span>&lt;span class="n">Downloads&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">size&lt;/span> &lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="n">M&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">exec&lt;/span> &lt;span class="n">ls&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">l&lt;/span> &lt;span class="p">{}&lt;/span> \&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">-&lt;/span>&lt;span class="n">rw&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="err">@&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="n">ziang&lt;/span> &lt;span class="n">staff&lt;/span> &lt;span class="mi">184354523&lt;/span> &lt;span class="mi">10&lt;/span> &lt;span class="mi">23&lt;/span> &lt;span class="mi">17&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">45&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">Users&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">ziang&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">Downloads&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">spark&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mf">2.0&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">bin&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">hadoop2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mf">6.&lt;/span>&lt;span class="n">tgz&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>可见{}的内容是相对于 之前输入的路径的&lt;/p>
&lt;p>然后可以对他们进行操作&lt;/p>
&lt;p>exec 必须以 &lt;code>;&lt;/code>{.language-plaintext .highlighter-rouge}结尾 然后
&lt;code>;&lt;/code>{.language-plaintext .highlighter-rouge}属于字符
需要转义所以结尾成了&lt;code>\;&lt;/code>{.language-plaintext .highlighter-rouge}&lt;/p></description></item><item><title>计算机的原码 反码 补码</title><link>https://chenchenfang.github.io/p/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E5%8E%9F%E7%A0%81-%E5%8F%8D%E7%A0%81-%E8%A1%A5%E7%A0%81/</link><pubDate>Sat, 26 Sep 2020 19:18:07 +0800</pubDate><guid>https://chenchenfang.github.io/p/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E5%8E%9F%E7%A0%81-%E5%8F%8D%E7%A0%81-%E8%A1%A5%E7%A0%81/</guid><description>&lt;h1 id="原码-反码-补码">原码 反码 补码
&lt;/h1>&lt;h2 id="一为什么会有原码反码补码">一:为什么会有原码反码补码?
&lt;/h2>&lt;p>为了让计算机更简单的计算数值.所以计算机用补码&lt;/p>
&lt;p>具体怎么实现,后边会说,接下来先看一下 什么是原码 反码和补码&lt;/p>
&lt;h2 id="二正数的原码-反码-补码">二:正数的原码 反码 补码
&lt;/h2>&lt;blockquote>
&lt;p>网上大多都是按 原码 反码 补码
分别去介绍,博主(本人)感觉这样的方法并不方便理解.所以改用
正数和负数来说&lt;/p>
&lt;/blockquote>
&lt;p>如果按int来的话,0太多了,看着不方便,就是8位来表示吧.&lt;/p>
&lt;p>正数就是 把十进制的数 变成二进制而已&lt;/p>
&lt;p>正数的&lt;code>原码 反码 补码是一样的&lt;/code>{.language-plaintext .highlighter-rouge}&lt;/p>
\[+1\]\[00000001\]\[00000001\]\[00000001\]&lt;p>（补码）&lt;/p>
&lt;h2 id="三负数的原码-反码-补码">三:负数的原码 反码 补码
&lt;/h2>&lt;p>原码:&lt;code>最高位为1&lt;/code>{.language-plaintext .highlighter-rouge}
代表这个数是负数&lt;/p>
&lt;p>反码: &lt;code>符号位不变&lt;/code>{.language-plaintext .highlighter-rouge},其他位取反&lt;/p>
&lt;p>补码: &lt;code>反码 + 1&lt;/code>{.language-plaintext .highlighter-rouge}&lt;/p>
\[-1\]\[10000001\]\[11111110\]\[11111111\]&lt;p>（补码）&lt;/p>
&lt;h2 id="四原码-反码-补码出现的意义">四:原码 反码 补码出现的意义
&lt;/h2>&lt;blockquote>
&lt;p>他们的出现都是为了让计算机计算的更加简单,从而性能更好.&lt;/p>
&lt;p>知识: 1 - 1 = 1 + (-1) 所以机器可以只有加法.&lt;/p>
&lt;/blockquote>
&lt;p>首先如果只是原码计算,人可以很方便的计算出数值,因为人可以分清符号位.&lt;/p>
&lt;p>可是计算机想识别符号位,是很麻烦的.有什么方法能让计算机更简单的计算呢,于是就有了反码.&lt;/p>
&lt;p>接下来看,反码的计算&lt;/p>
&lt;div class="highlight hljs language-yaml">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"> 1 - 1 = 1 + (-1)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> = [0000 0001]原 + [1000 0001]原
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> = [0000 0001]反 + [1111 1110]反
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> = [1111 1111]反
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> = [1000 0000]原
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> = -0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>反码已经可以让计算机计算更简单.但是为什么还有补码呢.&lt;/strong>&lt;/p>
\[1111 1111\]\[-0\]\[0000
0000\]\[+0\]&lt;p>正负0是没有意义的,所以补码是为了解决 0 有两个编码的问题.&lt;/p>
&lt;p>(其实到这里
反码是不能直接看出来它代表哪个数,就需要理解了,补码再反码的基础上+1,就更加难理解,我也尝试用更简单的方法来表达出来,有问题可以提出写到评论里)&lt;/p>
&lt;p>补码中规定:&lt;code>0的编码为[0000 0000]补 = [+0]&lt;/code>{.language-plaintext
.highlighter-rouge}&lt;/p>
&lt;p>在这里先不要去想二进制代表的十进制数,只想象它是&lt;code>编码&lt;/code>{.language-plaintext
.highlighter-rouge}&lt;/p>
&lt;p>首先 8位的二进制,就只有0000 0000 到 1111 1111 这么多个编码 (从0000 0000
开始+1)&lt;/p>
&lt;p>然后正数原码反码补码 都是一样的,那么咱们去掉0000 0000 到 0111 1111&lt;/p>
&lt;p>剩下的就是1000 0000 到 1111 1111 这些数值这些都是负数(因为符号位是1)&lt;/p>
&lt;p>这些编码挨个+1 是这样的&lt;/p>
&lt;div class="highlight hljs language-yaml">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">1000 0000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1000 0001
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1000 0010
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">....
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1111 1101
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1111 1110
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1111 1111
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>首先这些编码 如果是原码那么对应成十进制就是&lt;/p>
&lt;div class="highlight hljs language-diff">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">-0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">....
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-125
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-126
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-127
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>反码不是可以让计算机计算方便么,这些编码是反码 对应的十进制是&lt;/p>
&lt;div class="highlight hljs language-diff">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">-127
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-126
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-125
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>不是有-0么 怎么解决这个-0呢, 每个数-1,不就没有-0了么,最后变成了&lt;/p>
&lt;div class="highlight hljs language-diff">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">-128
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-127
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-126
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>完美解决-0的编码问题,而且多了一个&lt;code>-128&lt;/code>{.language-plaintext
.highlighter-rouge},这就是为什么java中int取值范围是
$-2^{31}$\ ~\ $2^{31}-1$&lt;/strong>&lt;br>
好了现在讨论反码怎么才能变成这些数呢,&lt;br>
-1的反码是 1111 1110 ,然后现在-1的&lt;code>编码&lt;/code>{.language-plaintext
.highlighter-rouge}变成了1111 1111(这个就是-1的补码了)&lt;/p>
&lt;p>综上所述: &lt;code>补码=反码+1&lt;/code>{.language-plaintext .highlighter-rouge}&lt;/p>
&lt;p>补码就是这么来的.所以计算机使用补码可以更快的是实现计算.(反码也可以,但是还是有-0问题,所以还是使用补码)&lt;/p></description></item><item><title>移位运算符-java</title><link>https://chenchenfang.github.io/p/%E7%A7%BB%E4%BD%8D%E8%BF%90%E7%AE%97%E7%AC%A6-java/</link><pubDate>Tue, 22 Sep 2020 22:35:00 +0800</pubDate><guid>https://chenchenfang.github.io/p/%E7%A7%BB%E4%BD%8D%E8%BF%90%E7%AE%97%E7%AC%A6-java/</guid><description>&lt;h1 id="移位运算符">移位运算符
&lt;/h1>&lt;blockquote>
&lt;p>最近在看HashMap的源码,其中有 &lt;code>&amp;lt;&amp;lt;&lt;/code>{.language-plaintext
.highlighter-rouge}或者 &lt;code>&amp;gt;&amp;gt;&amp;gt;&lt;/code>{.language-plaintext .highlighter-rouge}
就很懵逼 然后就去学习了一下 总结一下,之后如果忘了还可以再过来看&lt;/p>
&lt;/blockquote>
&lt;h2 id="原码反码补码">原码,反码,补码
&lt;/h2>&lt;p>计算机中存储数字是按二进制存储的,然后存的是补码.&lt;del>目前只知道存的是补码,我也不知道为什么存补码&lt;/del>&lt;br>
之后再详细看看再补充吧&lt;/p>
&lt;h2 id="1左移运算符">1、左移运算符：&amp;lt;&amp;lt;
&lt;/h2>&lt;blockquote>
&lt;p>丢弃最高位，0补最低位&lt;/p>
&lt;/blockquote>
&lt;p>拿&lt;code>int&lt;/code>{.language-plaintext .highlighter-rouge}来举例,int是32位的.&lt;br>
就是二进制集体往左移动多少位&lt;br>
(如果移动的位数x大于等于32,那么就x%32取余)&lt;/p>
&lt;div class="highlight java hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">123 ===&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">0000 0000 0000 0000 0000 0000 0111 1011
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">123 &amp;lt;&amp;lt; 2 ===&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">0000 0000 0000 0000 0000 0001 1110 1100
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">移动位数大于等于32 那么就会取余,即: 32%32 = 0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">123 ===&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">0000 0000 0000 0000 0000 0000 0111 1011
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">123 &amp;lt;&amp;lt; 32 ===&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">0000 0000 0000 0000 0000 0000 0111 1011
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">如果正好移位后的符号位为0 那么就会变成正数
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-123 ===&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1111 1111 1111 1111 1111 1111 1000 0101
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-123 &amp;lt;&amp;lt; 25 ===&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">0000 1010 0000 0000 0000 0000 0000 0000
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="2右移运算符带符号右移">2、右移运算符(带符号右移)：&amp;gt;&amp;gt;
&lt;/h2>&lt;blockquote>
&lt;p>符号位不变，左边补上符号位&lt;/p>
&lt;/blockquote>
&lt;p>就是二进制集体往右移动多少位&lt;br>
(如果移动的位数x大于等于32,那么就x%32取余)&lt;/p>
&lt;div class="highlight java hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">123 ====&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">0000 0000 0000 0000 0000 0000 0111 1011
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">123 &amp;gt;&amp;gt; 2 ===&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">0000 0000 0000 0000 0000 0000 0001 1110
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">123 &amp;gt;&amp;gt; 34 (移动位数大于等于32 那么就会取余, 即: 34%32 = 2) ===&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">0000 0000 0000 0000 0000 0000 0001 1110
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-123 ====&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1111 1111 1111 1111 1111 1111 1000 0101
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-123 &amp;gt;&amp;gt; 8 ===&amp;gt; -1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1111 1111 1111 1111 1111 1111 1111 1111
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="3右移运算符无符号右移">3、右移运算符(无符号右移)：&amp;gt;&amp;gt;&amp;gt;
&lt;/h2>&lt;blockquote>
&lt;p>忽略了符号位扩展，0补最高位&lt;/p>
&lt;/blockquote>
&lt;div class="highlight java hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">-123 ====&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1111 1111 1111 1111 1111 1111 1000 0101
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-123 &amp;gt;&amp;gt;&amp;gt; 8 ===&amp;gt; 16777215
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">0000 0000 1111 1111 1111 1111 1111 1111
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>单例模式-Java设计模式</title><link>https://chenchenfang.github.io/p/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F-java%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link><pubDate>Sun, 06 Sep 2020 08:51:07 +0800</pubDate><guid>https://chenchenfang.github.io/p/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F-java%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</guid><description>&lt;h1 id="单例模式">单例模式
&lt;/h1>&lt;h2 id="一--枚举单例">一 : 枚举单例
&lt;/h2>&lt;blockquote>
&lt;p>java中的枚举,只会初始化一次,所以枚举可以直接实现单例,直接上代码吧很简单&lt;/p>
&lt;/blockquote>
&lt;div class="highlight java hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">public&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="n">Singleton&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">Singleton&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="k">enum&lt;/span> &lt;span class="n">EnumSingleton&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">INSTANCE&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">private&lt;/span> &lt;span class="n">Singleton&lt;/span> &lt;span class="n">singleton&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">EnumSingleton&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">singleton&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">Singleton&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="n">Singleton&lt;/span> &lt;span class="n">getSingleton&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">singleton&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="k">static&lt;/span> &lt;span class="n">Singleton&lt;/span> &lt;span class="n">getSingleton&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">EnumSingleton&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">INSTANCE&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getSingleton&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">public&lt;/span> &lt;span class="k">static&lt;/span> &lt;span class="n">void&lt;/span> &lt;span class="n">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ne">String&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Singleton&lt;/span> &lt;span class="n">singleton&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Singleton&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getSingleton&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">System&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">out&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">singleton&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="二--内部类单例">二 : 内部类单例
&lt;/h2>&lt;blockquote>
&lt;p>在类的内部,再声明一个静态类,在静态类里边初始化外部的那个类&lt;/p>
&lt;/blockquote>
&lt;div class="highlight java hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">public class SingletonInnerClass {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private SingletonInnerClass() {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private static class Singleton {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private static SingletonInnerClass singletonInnerClass = new SingletonInnerClass();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public static SingletonInnerClass getInstance(){
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return Singleton.singletonInnerClass;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>第一次看这个类的时候,没有想明白为什么不直接在外部声明一个静态变量,现在想想应该是外部类&lt;code>SingletonInnerClass&lt;/code>{.language-plaintext
.highlighter-rouge}初始化的时候会把静态变量全都完成初始化,这样就不能实现延迟加载(只有真正用的时候才加载).&lt;/p>
&lt;h2 id="三--双重锁单例">三 : 双重锁单例
&lt;/h2>&lt;blockquote>
&lt;p>这种模式最麻烦,而且注意点比较多&lt;/p>
&lt;/blockquote>
&lt;div class="highlight java hljs">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">public class SingletonDCL {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private volatile static SingletonDCL singletonDCL;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> private SingletonDCL(){
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> public static SingletonDCL getSingletonDCL(){
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> //判断空是因为singletonDCL初始化完成之后,不用每次都加锁,从而提高性能
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if(singletonDCL==null){
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> synchronized (SingletonDCL.class){
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if(singletonDCL==null){
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> singletonDCL=new SingletonDCL();
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return singletonDCL;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>volatile 这个关键字作用是:禁止指令重排序优化&lt;br>
&lt;code>singletonDCL=new SingletonDCL();&lt;/code>{.language-plaintext
.highlighter-rouge} 这句话并不是一个原子操作.&lt;br>
这句话执行的具体内容为:&lt;/p>
&lt;ol>
&lt;li>给singletonDCL分配内存&lt;/li>
&lt;li>调用SingletonDCL构造函数完成初始化&lt;/li>
&lt;li>使singletonDCL对象的引用指向分配的内存空间&lt;/li>
&lt;/ol>
&lt;p>JVM
的即时编译器中存在指令重排序的优化,不能保证第二第三步骤的执行顺序,volatile可以使得按
1-&amp;gt;2-&amp;gt;3步骤来执行&lt;/p>
&lt;p>(就写这么多吧,本博客的第一篇文章,如果以后发现有问题在修改,也欢迎在评论中指出问题,一起成长)&lt;/p></description></item></channel></rss>